[{"/Users/macbook/Desktop/be-relax — копия/pages/_app.tsx":"1","/Users/macbook/Desktop/be-relax — копия/pages/academy.tsx":"2","/Users/macbook/Desktop/be-relax — копия/pages/airport-representative.tsx":"3","/Users/macbook/Desktop/be-relax — копия/pages/api/getAcademy.ts":"4","/Users/macbook/Desktop/be-relax — копия/pages/api/getAirRepresent.ts":"5","/Users/macbook/Desktop/be-relax — копия/pages/api/getBooking.ts":"6","/Users/macbook/Desktop/be-relax — копия/pages/api/getCareer.ts":"7","/Users/macbook/Desktop/be-relax — копия/pages/api/getCareerPost.ts":"8","/Users/macbook/Desktop/be-relax — копия/pages/api/getContact.ts":"9","/Users/macbook/Desktop/be-relax — копия/pages/api/getFaq.ts":"10","/Users/macbook/Desktop/be-relax — копия/pages/api/getFindUs.ts":"11","/Users/macbook/Desktop/be-relax — копия/pages/api/getHome.ts":"12","/Users/macbook/Desktop/be-relax — копия/pages/api/getLocation.ts":"13","/Users/macbook/Desktop/be-relax — копия/pages/api/getNews.ts":"14","/Users/macbook/Desktop/be-relax — копия/pages/api/getNewsPost.ts":"15","/Users/macbook/Desktop/be-relax — копия/pages/api/getPartners.ts":"16","/Users/macbook/Desktop/be-relax — копия/pages/api/getProdReg.ts":"17","/Users/macbook/Desktop/be-relax — копия/pages/api/getProduct.ts":"18","/Users/macbook/Desktop/be-relax — копия/pages/api/getProductCat.ts":"19","/Users/macbook/Desktop/be-relax — копия/pages/api/getProductsC.ts":"20","/Users/macbook/Desktop/be-relax — копия/pages/api/getRetailer.ts":"21","/Users/macbook/Desktop/be-relax — копия/pages/api/getSearch.ts":"22","/Users/macbook/Desktop/be-relax — копия/pages/api/getService.ts":"23","/Users/macbook/Desktop/be-relax — копия/pages/api/getStory.ts":"24","/Users/macbook/Desktop/be-relax — копия/pages/api/getTerms.ts":"25","/Users/macbook/Desktop/be-relax — копия/pages/api/getTreatCat.ts":"26","/Users/macbook/Desktop/be-relax — копия/pages/api/getTreatPage.ts":"27","/Users/macbook/Desktop/be-relax — копия/pages/booking.tsx":"28","/Users/macbook/Desktop/be-relax — копия/pages/careers/[slug].tsx":"29","/Users/macbook/Desktop/be-relax — копия/pages/careers/index.tsx":"30","/Users/macbook/Desktop/be-relax — копия/pages/contact-us.tsx":"31","/Users/macbook/Desktop/be-relax — копия/pages/faq.tsx":"32","/Users/macbook/Desktop/be-relax — копия/pages/find-us/[slug].tsx":"33","/Users/macbook/Desktop/be-relax — копия/pages/find-us/index.tsx":"34","/Users/macbook/Desktop/be-relax — копия/pages/index.tsx":"35","/Users/macbook/Desktop/be-relax — копия/pages/news/[slug].tsx":"36","/Users/macbook/Desktop/be-relax — копия/pages/news/index.tsx":"37","/Users/macbook/Desktop/be-relax — копия/pages/our-story.tsx":"38","/Users/macbook/Desktop/be-relax — копия/pages/partners.tsx":"39","/Users/macbook/Desktop/be-relax — копия/pages/products/[category]/[slug].tsx":"40","/Users/macbook/Desktop/be-relax — копия/pages/products/[category]/index.tsx":"41","/Users/macbook/Desktop/be-relax — копия/pages/products/find-retailer.tsx":"42","/Users/macbook/Desktop/be-relax — копия/pages/products/index.tsx":"43","/Users/macbook/Desktop/be-relax — копия/pages/products/register.tsx":"44","/Users/macbook/Desktop/be-relax — копия/pages/search.tsx":"45","/Users/macbook/Desktop/be-relax — копия/pages/terms-conditions.tsx":"46","/Users/macbook/Desktop/be-relax — копия/pages/treatments/[category]/[service].tsx":"47","/Users/macbook/Desktop/be-relax — копия/pages/treatments/[category]/index.tsx":"48","/Users/macbook/Desktop/be-relax — копия/pages/treatments/index.tsx":"49","/Users/macbook/Desktop/be-relax — копия/components/common/Button/index.tsx":"50","/Users/macbook/Desktop/be-relax — копия/components/common/Calendar/index.tsx":"51","/Users/macbook/Desktop/be-relax — копия/components/common/CheckBox/index.tsx":"52","/Users/macbook/Desktop/be-relax — копия/components/common/Cookie/index.tsx":"53","/Users/macbook/Desktop/be-relax — копия/components/common/CountryPop/index.tsx":"54","/Users/macbook/Desktop/be-relax — копия/components/common/CursorBall/index.tsx":"55","/Users/macbook/Desktop/be-relax — копия/components/common/CustomSlider/index.tsx":"56","/Users/macbook/Desktop/be-relax — копия/components/common/Footer/index.tsx":"57","/Users/macbook/Desktop/be-relax — копия/components/common/Header/index.tsx":"58","/Users/macbook/Desktop/be-relax — копия/components/common/IconComponent/index.tsx":"59","/Users/macbook/Desktop/be-relax — копия/components/common/ImageComponent/index.tsx":"60","/Users/macbook/Desktop/be-relax — копия/components/common/ImgBackground/index.tsx":"61","/Users/macbook/Desktop/be-relax — копия/components/common/InViewComponent/index.tsx":"62","/Users/macbook/Desktop/be-relax — копия/components/common/Input/index.tsx":"63","/Users/macbook/Desktop/be-relax — копия/components/common/Layout/index.tsx":"64","/Users/macbook/Desktop/be-relax — копия/components/common/MainSelect/index.tsx":"65","/Users/macbook/Desktop/be-relax — копия/components/common/Map/index.tsx":"66","/Users/macbook/Desktop/be-relax — копия/components/common/Menu/index.tsx":"67","/Users/macbook/Desktop/be-relax — копия/components/common/MusicBox/index.tsx":"68","/Users/macbook/Desktop/be-relax — копия/components/common/Navigation/index.tsx":"69","/Users/macbook/Desktop/be-relax — копия/components/common/NearItem/index.tsx":"70","/Users/macbook/Desktop/be-relax — копия/components/common/NewsPost/index.tsx":"71","/Users/macbook/Desktop/be-relax — копия/components/common/OfferItem/index.tsx":"72","/Users/macbook/Desktop/be-relax — копия/components/common/PartnerItem/index.tsx":"73","/Users/macbook/Desktop/be-relax — копия/components/common/PhoneSelect/index.tsx":"74","/Users/macbook/Desktop/be-relax — копия/components/common/Preloader/index.tsx":"75","/Users/macbook/Desktop/be-relax — копия/components/common/ProductCat/index.tsx":"76","/Users/macbook/Desktop/be-relax — копия/components/common/ProductItem/index.tsx":"77","/Users/macbook/Desktop/be-relax — копия/components/common/RadioButton/index.tsx":"78","/Users/macbook/Desktop/be-relax — копия/components/common/RetailMap/index.tsx":"79","/Users/macbook/Desktop/be-relax — копия/components/common/RetailPop/index.tsx":"80","/Users/macbook/Desktop/be-relax — копия/components/common/ScrollTop/index.tsx":"81","/Users/macbook/Desktop/be-relax — копия/components/common/ScrollTopButton/index.tsx":"82","/Users/macbook/Desktop/be-relax — копия/components/common/SearchBox/index.tsx":"83","/Users/macbook/Desktop/be-relax — копия/components/common/Select/index.tsx":"84","/Users/macbook/Desktop/be-relax — копия/components/common/SeoBlock/index.tsx":"85","/Users/macbook/Desktop/be-relax — копия/components/common/ServiceCat/index.tsx":"86","/Users/macbook/Desktop/be-relax — копия/components/common/ServiceItem/index.tsx":"87","/Users/macbook/Desktop/be-relax — копия/components/common/SmallPop/index.tsx":"88","/Users/macbook/Desktop/be-relax — копия/components/common/SmallPost/index.tsx":"89","/Users/macbook/Desktop/be-relax — копия/components/common/SocialLink/index.tsx":"90","/Users/macbook/Desktop/be-relax — копия/components/common/Text/index.tsx":"91","/Users/macbook/Desktop/be-relax — копия/components/common/Title/index.tsx":"92","/Users/macbook/Desktop/be-relax — копия/components/common/Title40/index.tsx":"93","/Users/macbook/Desktop/be-relax — копия/components/common/Title54/index.tsx":"94","/Users/macbook/Desktop/be-relax — копия/components/common/TreatmentItem/index.tsx":"95","/Users/macbook/Desktop/be-relax — копия/components/pages/academy/Courses/index.tsx":"96","/Users/macbook/Desktop/be-relax — копия/components/pages/academy/Stories/index.tsx":"97","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/BookAside/index.tsx":"98","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/BookFinal/index.tsx":"99","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/BookTab/index.tsx":"100","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/FirstStep/index.tsx":"101","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/ForthStep/index.tsx":"102","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/SecondStep/index.tsx":"103","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/SelectItem/index.tsx":"104","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/Steps/index.tsx":"105","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/ThirdStep/index.tsx":"106","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/TimePop/index.tsx":"107","/Users/macbook/Desktop/be-relax — копия/components/pages/career/Follow/index.tsx":"108","/Users/macbook/Desktop/be-relax — копия/components/pages/career/Intro/index.tsx":"109","/Users/macbook/Desktop/be-relax — копия/components/pages/career/Offers/index.tsx":"110","/Users/macbook/Desktop/be-relax — копия/components/pages/career/ResumeForm/index.tsx":"111","/Users/macbook/Desktop/be-relax — копия/components/pages/contact/ContactForm/index.tsx":"112","/Users/macbook/Desktop/be-relax — копия/components/pages/faq/Faq/index.tsx":"113","/Users/macbook/Desktop/be-relax — копия/components/pages/find/Intro/index.tsx":"114","/Users/macbook/Desktop/be-relax — копия/components/pages/find/PlaceCard/index.tsx":"115","/Users/macbook/Desktop/be-relax — копия/components/pages/find/PlacesList/index.tsx":"116","/Users/macbook/Desktop/be-relax — копия/components/pages/find/PlacesListMob/index.tsx":"117","/Users/macbook/Desktop/be-relax — копия/components/pages/home/BookBlock/index.tsx":"118","/Users/macbook/Desktop/be-relax — копия/components/pages/home/FollowUs/index.tsx":"119","/Users/macbook/Desktop/be-relax — копия/components/pages/home/Intro/index.tsx":"120","/Users/macbook/Desktop/be-relax — копия/components/pages/home/IntroVideo/index.tsx":"121","/Users/macbook/Desktop/be-relax — копия/components/pages/home/News/index.tsx":"122","/Users/macbook/Desktop/be-relax — копия/components/pages/home/Products/index.tsx":"123","/Users/macbook/Desktop/be-relax — копия/components/pages/home/Services/index.tsx":"124","/Users/macbook/Desktop/be-relax — копия/components/pages/home/TextBlock/index.tsx":"125","/Users/macbook/Desktop/be-relax — копия/components/pages/location/Banner/index.tsx":"126","/Users/macbook/Desktop/be-relax — копия/components/pages/location/FindUs/index.tsx":"127","/Users/macbook/Desktop/be-relax — копия/components/pages/location/Intro/index.tsx":"128","/Users/macbook/Desktop/be-relax — копия/components/pages/location/Near/index.tsx":"129","/Users/macbook/Desktop/be-relax — копия/components/pages/location/Partners/index.tsx":"130","/Users/macbook/Desktop/be-relax — копия/components/pages/location/Reviews/index.tsx":"131","/Users/macbook/Desktop/be-relax — копия/components/pages/location/Treatments/index.tsx":"132","/Users/macbook/Desktop/be-relax — копия/components/pages/news/Intro/index.tsx":"133","/Users/macbook/Desktop/be-relax — копия/components/pages/news/NewsList/index.tsx":"134","/Users/macbook/Desktop/be-relax — копия/components/pages/news/TopArticles/index.tsx":"135","/Users/macbook/Desktop/be-relax — копия/components/pages/newsPost/PostContent/index.tsx":"136","/Users/macbook/Desktop/be-relax — копия/components/pages/newsPost/Similiar/index.tsx":"137","/Users/macbook/Desktop/be-relax — копия/components/pages/partners/Intro/index.tsx":"138","/Users/macbook/Desktop/be-relax — копия/components/pages/partners/PartnerForm/index.tsx":"139","/Users/macbook/Desktop/be-relax — копия/components/pages/partners/PartnersList/index.tsx":"140","/Users/macbook/Desktop/be-relax — копия/components/pages/prodcat/ProductBanner/index.tsx":"141","/Users/macbook/Desktop/be-relax — копия/components/pages/prodcat/ProductsList/index.tsx":"142","/Users/macbook/Desktop/be-relax — копия/components/pages/product/Intro/index.tsx":"143","/Users/macbook/Desktop/be-relax — копия/components/pages/product/ProductAside/index.tsx":"144","/Users/macbook/Desktop/be-relax — копия/components/pages/products/Explore/index.tsx":"145","/Users/macbook/Desktop/be-relax — копия/components/pages/products/ProdRegister/index.tsx":"146","/Users/macbook/Desktop/be-relax — копия/components/pages/products/ProductsIntro/index.tsx":"147","/Users/macbook/Desktop/be-relax — копия/components/pages/represent/RepresentForm/index.tsx":"148","/Users/macbook/Desktop/be-relax — копия/components/pages/retailer/RetailerContent/index.tsx":"149","/Users/macbook/Desktop/be-relax — копия/components/pages/search/SearchContent/index.tsx":"150","/Users/macbook/Desktop/be-relax — копия/components/pages/service/Benefits/index.tsx":"151","/Users/macbook/Desktop/be-relax — копия/components/pages/service/Intro/index.tsx":"152","/Users/macbook/Desktop/be-relax — копия/components/pages/service/Similiar/index.tsx":"153","/Users/macbook/Desktop/be-relax — копия/components/pages/story/CompanyValues/index.tsx":"154","/Users/macbook/Desktop/be-relax — копия/components/pages/story/Intro/index.tsx":"155","/Users/macbook/Desktop/be-relax — копия/components/pages/story/RoadMap/index.tsx":"156","/Users/macbook/Desktop/be-relax — копия/components/pages/story/RoadMapYears/index.tsx":"157","/Users/macbook/Desktop/be-relax — копия/components/pages/story/StoryBlocks/index.tsx":"158","/Users/macbook/Desktop/be-relax — копия/components/pages/terms/TermsContent/index.tsx":"159","/Users/macbook/Desktop/be-relax — копия/components/pages/treatcat/Categories/index.tsx":"160","/Users/macbook/Desktop/be-relax — копия/components/pages/treatcat/Intro/index.tsx":"161","/Users/macbook/Desktop/be-relax — копия/components/pages/treatcat/ServicesList/index.tsx":"162","/Users/macbook/Desktop/be-relax — копия/components/pages/treatments/Faqs/index.tsx":"163","/Users/macbook/Desktop/be-relax — копия/components/pages/treatments/Intro/index.tsx":"164","/Users/macbook/Desktop/be-relax — копия/components/pages/vacancy/Intro/index.tsx":"165","/Users/macbook/Desktop/be-relax — копия/components/common/RetailerSelect/index.tsx":"166"},{"size":2048,"mtime":1677085916370,"results":"167","hashOfConfig":"168"},{"size":1269,"mtime":1675686588095,"results":"169","hashOfConfig":"168"},{"size":1341,"mtime":1675686578864,"results":"170","hashOfConfig":"168"},{"size":431,"mtime":1675430704363,"results":"171","hashOfConfig":"168"},{"size":446,"mtime":1675433755515,"results":"172","hashOfConfig":"168"},{"size":522,"mtime":1675514782391,"results":"173","hashOfConfig":"168"},{"size":580,"mtime":1675597147091,"results":"174","hashOfConfig":"168"},{"size":586,"mtime":1675448792402,"results":"175","hashOfConfig":"168"},{"size":521,"mtime":1675688034925,"results":"176","hashOfConfig":"168"},{"size":418,"mtime":1675439420411,"results":"177","hashOfConfig":"168"},{"size":503,"mtime":1675514766215,"results":"178","hashOfConfig":"168"},{"size":468,"mtime":1675088554549,"results":"179","hashOfConfig":"168"},{"size":561,"mtime":1675698921408,"results":"180","hashOfConfig":"168"},{"size":473,"mtime":1676828017375,"results":"181","hashOfConfig":"168"},{"size":558,"mtime":1675446547059,"results":"182","hashOfConfig":"168"},{"size":434,"mtime":1675431588431,"results":"183","hashOfConfig":"168"},{"size":490,"mtime":1675502966085,"results":"184","hashOfConfig":"168"},{"size":574,"mtime":1675170134901,"results":"185","hashOfConfig":"168"},{"size":650,"mtime":1675103929395,"results":"186","hashOfConfig":"168"},{"size":479,"mtime":1675523198800,"results":"187","hashOfConfig":"168"},{"size":434,"mtime":1675504389329,"results":"188","hashOfConfig":"168"},{"size":434,"mtime":1675503990427,"results":"189","hashOfConfig":"168"},{"size":627,"mtime":1675086250008,"results":"190","hashOfConfig":"168"},{"size":460,"mtime":1675426793044,"results":"191","hashOfConfig":"168"},{"size":418,"mtime":1675439832883,"results":"192","hashOfConfig":"168"},{"size":759,"mtime":1675522839638,"results":"193","hashOfConfig":"168"},{"size":457,"mtime":1675522500808,"results":"194","hashOfConfig":"168"},{"size":1215,"mtime":1675686568977,"results":"195","hashOfConfig":"168"},{"size":1629,"mtime":1675686318806,"results":"196","hashOfConfig":"168"},{"size":1386,"mtime":1675686327817,"results":"197","hashOfConfig":"168"},{"size":1136,"mtime":1675686563297,"results":"198","hashOfConfig":"168"},{"size":1017,"mtime":1675686556702,"results":"199","hashOfConfig":"168"},{"size":1917,"mtime":1675686340050,"results":"200","hashOfConfig":"168"},{"size":1214,"mtime":1675686348742,"results":"201","hashOfConfig":"168"},{"size":1479,"mtime":1675686037610,"results":"202","hashOfConfig":"168"},{"size":1776,"mtime":1675686358431,"results":"203","hashOfConfig":"168"},{"size":1205,"mtime":1675686363719,"results":"204","hashOfConfig":"168"},{"size":1365,"mtime":1675686550051,"results":"205","hashOfConfig":"168"},{"size":1386,"mtime":1675686546027,"results":"206","hashOfConfig":"168"},{"size":1854,"mtime":1675686393940,"results":"207","hashOfConfig":"168"},{"size":1725,"mtime":1675686400825,"results":"208","hashOfConfig":"168"},{"size":1096,"mtime":1675686369777,"results":"209","hashOfConfig":"168"},{"size":1292,"mtime":1675686377908,"results":"210","hashOfConfig":"168"},{"size":1258,"mtime":1675686384356,"results":"211","hashOfConfig":"168"},{"size":1964,"mtime":1675686541294,"results":"212","hashOfConfig":"168"},{"size":1048,"mtime":1675686537132,"results":"213","hashOfConfig":"168"},{"size":1757,"mtime":1675686500708,"results":"214","hashOfConfig":"168"},{"size":1753,"mtime":1675686492736,"results":"215","hashOfConfig":"168"},{"size":1392,"mtime":1675686506246,"results":"216","hashOfConfig":"168"},{"size":1373,"mtime":1675603051734,"results":"217","hashOfConfig":"168"},{"size":2571,"mtime":1675603345577,"results":"218","hashOfConfig":"168"},{"size":603,"mtime":1675603364146,"results":"219","hashOfConfig":"168"},{"size":1861,"mtime":1671365662007,"results":"220","hashOfConfig":"168"},{"size":3516,"mtime":1677085966835,"results":"221","hashOfConfig":"168"},{"size":3139,"mtime":1675603693325,"results":"222","hashOfConfig":"168"},{"size":3096,"mtime":1675604143531,"results":"223","hashOfConfig":"168"},{"size":6780,"mtime":1675683272614,"results":"224","hashOfConfig":"168"},{"size":4455,"mtime":1675607959778,"results":"225","hashOfConfig":"168"},{"size":814,"mtime":1675604948489,"results":"226","hashOfConfig":"168"},{"size":1593,"mtime":1675605042435,"results":"227","hashOfConfig":"168"},{"size":321,"mtime":1675429001397,"results":"228","hashOfConfig":"168"},{"size":916,"mtime":1675607998272,"results":"229","hashOfConfig":"168"},{"size":1050,"mtime":1671468751694,"results":"230","hashOfConfig":"168"},{"size":3031,"mtime":1676827225080,"results":"231","hashOfConfig":"168"},{"size":3450,"mtime":1675608010672,"results":"232","hashOfConfig":"168"},{"size":8274,"mtime":1674669701387,"results":"233","hashOfConfig":"168"},{"size":5662,"mtime":1675594603553,"results":"234","hashOfConfig":"168"},{"size":1695,"mtime":1675068778772,"results":"235","hashOfConfig":"168"},{"size":5437,"mtime":1675423327800,"results":"236","hashOfConfig":"168"},{"size":1255,"mtime":1673089634930,"results":"237","hashOfConfig":"168"},{"size":1889,"mtime":1676827877350,"results":"238","hashOfConfig":"168"},{"size":1524,"mtime":1675450142569,"results":"239","hashOfConfig":"168"},{"size":767,"mtime":1675433217627,"results":"240","hashOfConfig":"168"},{"size":3615,"mtime":1675696424243,"results":"241","hashOfConfig":"168"},{"size":150,"mtime":1668028120869,"results":"242","hashOfConfig":"168"},{"size":1740,"mtime":1675608087243,"results":"243","hashOfConfig":"168"},{"size":3289,"mtime":1675423892834,"results":"244","hashOfConfig":"168"},{"size":671,"mtime":1669286173263,"results":"245","hashOfConfig":"168"},{"size":4277,"mtime":1676298672531,"results":"246","hashOfConfig":"168"},{"size":7107,"mtime":1677085212377,"results":"247","hashOfConfig":"168"},{"size":1132,"mtime":1675082239738,"results":"248","hashOfConfig":"168"},{"size":1267,"mtime":1674640852066,"results":"249","hashOfConfig":"168"},{"size":1872,"mtime":1675603282766,"results":"250","hashOfConfig":"168"},{"size":10653,"mtime":1675608163815,"results":"251","hashOfConfig":"168"},{"size":238,"mtime":1675074637377,"results":"252","hashOfConfig":"168"},{"size":2664,"mtime":1675608181316,"results":"253","hashOfConfig":"168"},{"size":3898,"mtime":1677087043730,"results":"254","hashOfConfig":"168"},{"size":1079,"mtime":1669710691534,"results":"255","hashOfConfig":"168"},{"size":1349,"mtime":1675444824267,"results":"256","hashOfConfig":"168"},{"size":559,"mtime":1675604594014,"results":"257","hashOfConfig":"168"},{"size":339,"mtime":1669728083766,"results":"258","hashOfConfig":"168"},{"size":340,"mtime":1669727329362,"results":"259","hashOfConfig":"168"},{"size":341,"mtime":1669730958510,"results":"260","hashOfConfig":"168"},{"size":341,"mtime":1669730941829,"results":"261","hashOfConfig":"168"},{"size":670,"mtime":1675515850483,"results":"262","hashOfConfig":"168"},{"size":1806,"mtime":1675431020712,"results":"263","hashOfConfig":"168"},{"size":3766,"mtime":1675604389432,"results":"264","hashOfConfig":"168"},{"size":5139,"mtime":1675501681945,"results":"265","hashOfConfig":"168"},{"size":5016,"mtime":1675502680263,"results":"266","hashOfConfig":"168"},{"size":1271,"mtime":1673435932400,"results":"267","hashOfConfig":"168"},{"size":2389,"mtime":1671556091660,"results":"268","hashOfConfig":"168"},{"size":4714,"mtime":1675698914323,"results":"269","hashOfConfig":"168"},{"size":4413,"mtime":1677083752264,"results":"270","hashOfConfig":"168"},{"size":1673,"mtime":1675459227485,"results":"271","hashOfConfig":"168"},{"size":4098,"mtime":1675458583044,"results":"272","hashOfConfig":"168"},{"size":2985,"mtime":1675606116167,"results":"273","hashOfConfig":"168"},{"size":1803,"mtime":1675502657281,"results":"274","hashOfConfig":"168"},{"size":2224,"mtime":1674548070151,"results":"275","hashOfConfig":"168"},{"size":2476,"mtime":1675447671296,"results":"276","hashOfConfig":"168"},{"size":2926,"mtime":1675608348763,"results":"277","hashOfConfig":"168"},{"size":10306,"mtime":1675698917973,"results":"278","hashOfConfig":"168"},{"size":9035,"mtime":1675688172576,"results":"279","hashOfConfig":"168"},{"size":4793,"mtime":1674296896197,"results":"280","hashOfConfig":"168"},{"size":1924,"mtime":1675513961024,"results":"281","hashOfConfig":"168"},{"size":1663,"mtime":1674550193979,"results":"282","hashOfConfig":"168"},{"size":1522,"mtime":1675513409772,"results":"283","hashOfConfig":"168"},{"size":6277,"mtime":1674312723386,"results":"284","hashOfConfig":"168"},{"size":1826,"mtime":1674550212433,"results":"285","hashOfConfig":"168"},{"size":2480,"mtime":1675423183233,"results":"286","hashOfConfig":"168"},{"size":3711,"mtime":1675605700871,"results":"287","hashOfConfig":"168"},{"size":11069,"mtime":1675422630816,"results":"288","hashOfConfig":"168"},{"size":2941,"mtime":1675603783526,"results":"289","hashOfConfig":"168"},{"size":2302,"mtime":1674754680395,"results":"290","hashOfConfig":"168"},{"size":1135,"mtime":1674754668805,"results":"291","hashOfConfig":"168"},{"size":690,"mtime":1674049596915,"results":"292","hashOfConfig":"168"},{"size":1741,"mtime":1675363323168,"results":"293","hashOfConfig":"168"},{"size":1777,"mtime":1671544445330,"results":"294","hashOfConfig":"168"},{"size":1568,"mtime":1675515301767,"results":"295","hashOfConfig":"168"},{"size":1995,"mtime":1675515395414,"results":"296","hashOfConfig":"168"},{"size":1253,"mtime":1675516200946,"results":"297","hashOfConfig":"168"},{"size":1987,"mtime":1675604259812,"results":"298","hashOfConfig":"168"},{"size":1839,"mtime":1671544512016,"results":"299","hashOfConfig":"168"},{"size":665,"mtime":1671544512085,"results":"300","hashOfConfig":"168"},{"size":4606,"mtime":1677085678831,"results":"301","hashOfConfig":"168"},{"size":1498,"mtime":1674296243085,"results":"302","hashOfConfig":"168"},{"size":3168,"mtime":1675606141284,"results":"303","hashOfConfig":"168"},{"size":2708,"mtime":1675446418992,"results":"304","hashOfConfig":"168"},{"size":675,"mtime":1671544512005,"results":"305","hashOfConfig":"168"},{"size":7240,"mtime":1675688804149,"results":"306","hashOfConfig":"168"},{"size":1304,"mtime":1673277616563,"results":"307","hashOfConfig":"168"},{"size":1267,"mtime":1669659853197,"results":"308","hashOfConfig":"168"},{"size":6556,"mtime":1675608704802,"results":"309","hashOfConfig":"168"},{"size":8307,"mtime":1675361946088,"results":"310","hashOfConfig":"168"},{"size":1708,"mtime":1674668951501,"results":"311","hashOfConfig":"168"},{"size":1679,"mtime":1675099071831,"results":"312","hashOfConfig":"168"},{"size":8562,"mtime":1675695319063,"results":"313","hashOfConfig":"168"},{"size":2048,"mtime":1673273256236,"results":"314","hashOfConfig":"168"},{"size":6835,"mtime":1675688884289,"results":"315","hashOfConfig":"168"},{"size":5545,"mtime":1677085357671,"results":"316","hashOfConfig":"168"},{"size":6105,"mtime":1675682807144,"results":"317","hashOfConfig":"168"},{"size":1200,"mtime":1675362409801,"results":"318","hashOfConfig":"168"},{"size":4606,"mtime":1677083658051,"results":"319","hashOfConfig":"168"},{"size":3184,"mtime":1675088250149,"results":"320","hashOfConfig":"168"},{"size":2383,"mtime":1675428963928,"results":"321","hashOfConfig":"168"},{"size":905,"mtime":1675428976036,"results":"322","hashOfConfig":"168"},{"size":2439,"mtime":1675604157228,"results":"323","hashOfConfig":"168"},{"size":2343,"mtime":1671107670181,"results":"324","hashOfConfig":"168"},{"size":1309,"mtime":1675429735765,"results":"325","hashOfConfig":"168"},{"size":780,"mtime":1671544511598,"results":"326","hashOfConfig":"168"},{"size":4056,"mtime":1675423530012,"results":"327","hashOfConfig":"168"},{"size":751,"mtime":1669727734231,"results":"328","hashOfConfig":"168"},{"size":4906,"mtime":1675608590550,"results":"329","hashOfConfig":"168"},{"size":2635,"mtime":1670243491732,"results":"330","hashOfConfig":"168"},{"size":701,"mtime":1669727780634,"results":"331","hashOfConfig":"168"},{"size":5262,"mtime":1675450934210,"results":"332","hashOfConfig":"168"},{"size":3760,"mtime":1677085056498,"results":"333","hashOfConfig":"168"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c9n3jz",{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"346","messages":"347","suppressedMessages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"349","messages":"350","suppressedMessages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"352","messages":"353","suppressedMessages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","suppressedMessages":"357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","suppressedMessages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"361","messages":"362","suppressedMessages":"363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","suppressedMessages":"366","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"367","messages":"368","suppressedMessages":"369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","suppressedMessages":"372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","suppressedMessages":"375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","suppressedMessages":"378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"379","messages":"380","suppressedMessages":"381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","suppressedMessages":"384","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"385","messages":"386","suppressedMessages":"387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","suppressedMessages":"390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"391","messages":"392","suppressedMessages":"393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","suppressedMessages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"397","messages":"398","suppressedMessages":"399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","suppressedMessages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"403","messages":"404","suppressedMessages":"405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"406","messages":"407","suppressedMessages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","suppressedMessages":"411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"412","messages":"413","suppressedMessages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","suppressedMessages":"417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"418","messages":"419","suppressedMessages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","suppressedMessages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"424","messages":"425","suppressedMessages":"426","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","suppressedMessages":"429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"430","messages":"431","suppressedMessages":"432","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","suppressedMessages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","suppressedMessages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","suppressedMessages":"441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","suppressedMessages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","suppressedMessages":"447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"448","messages":"449","suppressedMessages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","suppressedMessages":"453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"454","messages":"455","suppressedMessages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","suppressedMessages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","suppressedMessages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"463","messages":"464","suppressedMessages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","suppressedMessages":"468","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"497"},{"filePath":"498","messages":"499","suppressedMessages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"501"},{"filePath":"502","messages":"503","suppressedMessages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","suppressedMessages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","suppressedMessages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511"},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"518"},{"filePath":"519","messages":"520","suppressedMessages":"521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","suppressedMessages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"525","messages":"526","suppressedMessages":"527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","suppressedMessages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"531","messages":"532","suppressedMessages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534"},{"filePath":"535","messages":"536","suppressedMessages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538"},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"542"},{"filePath":"543","messages":"544","suppressedMessages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","suppressedMessages":"548","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"549","messages":"550","suppressedMessages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","suppressedMessages":"554","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"555","messages":"556","suppressedMessages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","suppressedMessages":"560","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"561","messages":"562","suppressedMessages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564"},{"filePath":"565","messages":"566","suppressedMessages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","suppressedMessages":"570","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"571","messages":"572","suppressedMessages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","suppressedMessages":"576","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","suppressedMessages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","suppressedMessages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583"},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"587"},{"filePath":"588","messages":"589","suppressedMessages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"591"},{"filePath":"592","messages":"593","suppressedMessages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595"},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"599"},{"filePath":"600","messages":"601","suppressedMessages":"602","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","suppressedMessages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","suppressedMessages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"609","messages":"610","suppressedMessages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","suppressedMessages":"614","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"615","messages":"616","suppressedMessages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","suppressedMessages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"621","messages":"622","suppressedMessages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","suppressedMessages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"627","messages":"628","suppressedMessages":"629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","suppressedMessages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"633","messages":"634","suppressedMessages":"635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","suppressedMessages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"639","messages":"640","suppressedMessages":"641","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"642"},{"filePath":"643","messages":"644","suppressedMessages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","suppressedMessages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","suppressedMessages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652"},{"filePath":"653","messages":"654","suppressedMessages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","suppressedMessages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659"},{"filePath":"660","messages":"661","suppressedMessages":"662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"663","messages":"664","suppressedMessages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666"},{"filePath":"667","messages":"668","suppressedMessages":"669","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","suppressedMessages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"673","messages":"674","suppressedMessages":"675","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","suppressedMessages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"679","messages":"680","suppressedMessages":"681","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","suppressedMessages":"684","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685"},{"filePath":"686","messages":"687","suppressedMessages":"688","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"689"},{"filePath":"690","messages":"691","suppressedMessages":"692","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"693","messages":"694","suppressedMessages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","suppressedMessages":"698","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","suppressedMessages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","suppressedMessages":"704","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","suppressedMessages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","suppressedMessages":"710","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"711"},{"filePath":"712","messages":"713","suppressedMessages":"714","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","suppressedMessages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"719","messages":"720","suppressedMessages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"722"},{"filePath":"723","messages":"724","suppressedMessages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","suppressedMessages":"728","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","suppressedMessages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","suppressedMessages":"734","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","suppressedMessages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","suppressedMessages":"740","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","suppressedMessages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"744","messages":"745","suppressedMessages":"746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","suppressedMessages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","suppressedMessages":"752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"753","messages":"754","suppressedMessages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","suppressedMessages":"758","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759"},{"filePath":"760","messages":"761","suppressedMessages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","suppressedMessages":"765","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"766","messages":"767","suppressedMessages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","suppressedMessages":"771","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"772","messages":"773","suppressedMessages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"775"},{"filePath":"776","messages":"777","suppressedMessages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","suppressedMessages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"782","messages":"783","suppressedMessages":"784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","suppressedMessages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"788","messages":"789","suppressedMessages":"790","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"791"},{"filePath":"792","messages":"793","suppressedMessages":"794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","suppressedMessages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"798"},{"filePath":"799","messages":"800","suppressedMessages":"801","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"802","messages":"803","suppressedMessages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"805"},{"filePath":"806","messages":"807","suppressedMessages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","suppressedMessages":"811","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","suppressedMessages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","suppressedMessages":"817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"818","messages":"819","suppressedMessages":"820","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","suppressedMessages":"823","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"824","messages":"825","suppressedMessages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","suppressedMessages":"829","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"830","messages":"831","suppressedMessages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"833"},{"filePath":"834","messages":"835","suppressedMessages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","suppressedMessages":"839","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"840","messages":"841","suppressedMessages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"843"},{"filePath":"844","messages":"845","suppressedMessages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","suppressedMessages":"849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"850","messages":"851","suppressedMessages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","suppressedMessages":"855","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"856","messages":"857","suppressedMessages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"859"},{"filePath":"860","messages":"861","suppressedMessages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"863"},"/Users/macbook/Desktop/be-relax — копия/pages/_app.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/academy.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/airport-representative.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getAcademy.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getAirRepresent.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getBooking.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getCareer.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getCareerPost.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getContact.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getFaq.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getFindUs.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getHome.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getLocation.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getNews.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getNewsPost.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getPartners.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getProdReg.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getProduct.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getProductCat.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getProductsC.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getRetailer.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getSearch.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getService.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getStory.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getTerms.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getTreatCat.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/api/getTreatPage.ts",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/booking.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/careers/[slug].tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/careers/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/contact-us.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/faq.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/find-us/[slug].tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/find-us/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/news/[slug].tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/news/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/our-story.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/partners.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/products/[category]/[slug].tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/products/[category]/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/products/find-retailer.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/products/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/products/register.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/search.tsx",["864"],[],"import { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport useLocoScroll from '../hooks/useLoco'\nimport Layout from '../components/common/Layout'\nimport { getSearch } from './api/getSearch'\nimport SearchContent from '../components/pages/search/SearchContent'\nimport SeoBlock from '../components/common/SeoBlock'\nimport { getNews, getProducts, getServices } from '../stores/ContentState'\nimport { observable, runInAction } from 'mobx'\n\nexport const StateArrays: any = observable({\n  products: null,\n  services: null,\n  news: null,\n})\n\nconst Search = observer(({ hydrationData: props }: any) => {\n  const [loading, setLoading] = useState(true)\n  const ref = useRef<boolean>(false)\n  useLocoScroll(!loading)\n  useEffect(() => {\n    if (!loading) {\n      if (typeof window === 'undefined' || !window.document) {\n        return\n      }\n    }\n  }, [loading])\n\n  useEffect(() => {\n    if (ref.current) return\n    getProducts().then((res) => {\n      runInAction(() => {\n        StateArrays.products = res\n      })\n    })\n    getNews().then((res) => {\n      runInAction(() => {\n        StateArrays.news = res\n      })\n    })\n    getServices().then((res) => {\n      runInAction(() => {\n        StateArrays.services = res\n      })\n    })\n    ref.current = true\n  }, [])\n\n  useEffect(() => {\n    if (StateArrays.news && StateArrays.products && StateArrays.services) {\n      setTimeout(() => {\n        setLoading(false)\n      }, 200)\n    }\n  }, [StateArrays.news, StateArrays.products, StateArrays.services])\n\n  return (\n    <>\n      <SeoBlock seo={props.seo} />\n      {!loading ? (\n        <Layout>\n          <SearchContent />\n        </Layout>\n      ) : (\n        <div style={{ width: '100%', height: 500 }}></div>\n      )}\n    </>\n  )\n})\n\nexport default Search\n\nexport async function getStaticProps() {\n  const response = await getSearch()\n\n  return {\n    props: {\n      hydrationData: { ...response },\n    },\n    revalidate: 10,\n  }\n}\n","/Users/macbook/Desktop/be-relax — копия/pages/terms-conditions.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/treatments/[category]/[service].tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/treatments/[category]/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/pages/treatments/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Button/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Calendar/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/CheckBox/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Cookie/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/CountryPop/index.tsx",["865"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useState } from 'react'\nimport { useContentState } from '../../../hooks/RootStoreProvider'\nimport GlobalState, { changeCountryState } from '../../../stores/GlobalState'\nimport Button from '../Button'\nimport { IconComponent } from '../IconComponent'\nimport ImageComponent from '../ImageComponent'\n\nconst CountryPop = observer(() => {\n  const [active, setActive] = useState(false)\n  const { countrypop } = useContentState()\n\n  useEffect(() => {\n    if (GlobalState.isCountryOpen) {\n      setTimeout(() => {\n        setActive(true)\n      }, 100)\n    } else {\n      setTimeout(() => {\n        setActive(false)\n      }, 100)\n    }\n  }, [GlobalState.isCountryOpen])\n\n  return (\n    <section className={classNames('country-pop', active && 'open')}>\n      <div className=\"country-pop__container\">\n        <div className=\"country-pop__col\">\n          <div\n            className=\"country-pop__title\"\n            dangerouslySetInnerHTML={{ __html: countrypop?.title }}\n          ></div>\n          <div\n            className=\"country-pop__text\"\n            dangerouslySetInnerHTML={{ __html: countrypop?.text }}\n          ></div>\n          <Button\n            classStr=\"beige button-arrow button-svg p20p28\"\n            isLink={false}\n            action={changeCountryState}\n            inner={\n              <>\n                {countrypop?.buttonTitle}\n                <IconComponent name={'arrow'} />\n              </>\n            }\n          />\n          <div\n            className=\"country-pop__subtitle\"\n            dangerouslySetInnerHTML={{ __html: countrypop?.subTitle }}\n          ></div>\n          <div\n            className=\"country-pop__subtext\"\n            dangerouslySetInnerHTML={{ __html: countrypop?.subText }}\n          ></div>\n          <div className=\"country-pop__list\">\n            {countrypop?.list.map(\n              (\n                li: {\n                  title: string\n                  code: string\n                },\n                i: number,\n              ) => (\n                <div\n                  className=\"country-pop__item\"\n                  key={i}\n                  onClick={() => {\n                    if (li.title.includes('Other')) {\n                      runInAction(() => {\n                        GlobalState.currentLocale = {\n                          country: 'Germany',\n                          code: 'de',\n                        }\n                      })\n                    } else {\n                      runInAction(() => {\n                        GlobalState.currentLocale = {\n                          country: li.title,\n                          code: li.code,\n                        }\n                      })\n                      localStorage.setItem(\n                        'locale',\n                        JSON.stringify({\n                          country: li.title,\n                          code: li.code,\n                        }),\n                      )\n                    }\n                    changeCountryState()\n                  }}\n                >\n                  <IconComponent name={'location/plane'} />\n                  {li.title}\n                </div>\n              ),\n            )}\n          </div>\n        </div>\n        <div className=\"country-pop__img\">\n          <ImageComponent src={countrypop?.img} alt={countrypop.alt} />\n        </div>\n      </div>\n    </section>\n  )\n})\n\nexport default CountryPop\n","/Users/macbook/Desktop/be-relax — копия/components/common/CursorBall/index.tsx",["866","867","868"],[],"import { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useWindowDimensions } from '../../../hooks/getWindowDimensions'\nimport GlobalState from '../../../stores/GlobalState'\nimport { IconComponent } from '../IconComponent'\n\nconst CursorBall = observer(() => {\n  const cursor = useRef<any>(null)\n  const { width } = useWindowDimensions()\n  const [isShow, setShow] = useState(false)\n  let mouse = { x: 0, y: 0 }\n  let pos = {\n    x: 0,\n    y: 0,\n  }\n  let speed = 0.1\n\n  const updatePosition = () => {\n    const cursor = document.querySelector('.cursor-ball')\n    if (cursor) {\n      pos.x += (mouse.x - pos.x - (cursor as any).offsetWidth / 2) * speed\n      pos.y += (mouse.y - pos.y - (cursor as any).offsetHeight / 2) * speed\n      ;(cursor as HTMLElement).style.transform =\n        'translate(' + pos.x + 'px ,' + pos.y + 'px)'\n    }\n  }\n\n  const updateCoordinates = (e: MouseEvent) => {\n    mouse = { x: e.clientX, y: e.clientY }\n    cursor.current && ((cursor.current as HTMLElement).style.opacity = '1')\n    loop()\n  }\n\n  const loop = () => {\n    updatePosition()\n    requestAnimationFrame(loop)\n  }\n\n  const setClass = (e: MouseEvent) => {\n    const target: EventTarget| null = e.currentTarget\n    if (!target) return\n    const cursor = document.querySelector('.cursor-ball')\n    const className = (target as HTMLElement).getAttribute('cursor-class')\n    if (className && !(cursor as HTMLElement).classList.contains(className)) {\n      cursor!.classList.add(className)\n    }\n    loop()\n  }\n\n  const removeClass = (e: MouseEvent) => {\n    const cursor = document.querySelector('.cursor-ball')\n    cursor!.className = 'cursor-ball'\n    loop()\n  }\n\n  useEffect(() => {\n    const components = document.querySelectorAll('[cursor-class]') as any\n    if (!components) return\n    components.forEach((element: HTMLElement) => {\n      element.addEventListener('mousemove', (e: MouseEvent) => setClass(e))\n      element.addEventListener('mouseleave', removeClass)\n    })\n\n    return () => {\n      const components = document.querySelectorAll('[cursor-class]') as any\n      if (!components) return\n\n      components.forEach((element: HTMLElement) => {\n        element.removeEventListener('mousemove', (e: MouseEvent) => setClass(e))\n        element.removeEventListener('mouseleave', removeClass)\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    cursor.current && (cursor.current.style.opacity = '0')\n    if (window.innerWidth > 1024) {\n      window.addEventListener('mousemove', updateCoordinates)\n      requestAnimationFrame(loop)\n    }\n\n    return () => {\n      if (window.innerWidth > 1024) {\n        window.removeEventListener('mousemove', updateCoordinates)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (GlobalState.isTouch) {\n      document.querySelector('.cursor-ball')?.classList.add('hidden')\n    } else document.querySelector('.cursor-ball')?.classList.remove('hidden')\n  }, [GlobalState.isTouch])\n\n  if (width <= 1024) {\n    return <></>\n  }\n\n  return (\n    <div className=\"cursor-ball\" ref={cursor}>\n      <IconComponent name={'Swipe'} />\n    </div>\n  )\n})\n\nexport default CursorBall\n","/Users/macbook/Desktop/be-relax — копия/components/common/CustomSlider/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Footer/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Header/index.tsx",["869","870"],[],"import { observer } from 'mobx-react'\nimport { useEffect, useRef } from 'react'\nimport { IconComponent } from '../IconComponent'\nimport classNames from 'classnames'\nimport Button from '../Button'\nimport InViewComponent from '../InViewComponent'\nimport GlobalState, { changeSearchState } from '../../../stores/GlobalState'\nimport { changeMenuState } from '../../../stores/GlobalState'\nimport { runInAction } from 'mobx'\nimport { useContentState } from '../../../hooks/RootStoreProvider'\nimport Navigation from '../Navigation'\nimport ImageComponent from '../ImageComponent'\nconst Header = observer(\n  ({\n    isAbsolute = false,\n    delay = 2,\n  }: {\n    isAbsolute?: boolean\n    delay?: number\n  }) => {\n    const { header } = useContentState()\n    const headerRef = useRef<any>(null)\n\n    useEffect(() => {\n      if (isAbsolute) return\n      const header = document.querySelector('.header.fixed')\n      const smooth = document.querySelector('.smooth')\n      if (!header || !smooth) return\n      const smoothHeight =\n        smooth.getBoundingClientRect().height - window.innerHeight\n      if (GlobalState.locoScroll) {\n        ;(GlobalState.locoScroll as any).on('scroll', (args: any) => {\n          if (\n            args.direction == 'up' &&\n            args.scroll.y > header.getBoundingClientRect().height * 2 &&\n            args.scroll.y < smoothHeight\n          ) {\n            header.classList.add('show')\n          } else {\n            header.classList.remove('show')\n          }\n        })\n      }\n    }, [GlobalState.locoScroll, isAbsolute])\n\n    useEffect(() => {\n      const header = document.querySelector('.header.absolute')\n      if (!header) return\n      ;(document.querySelectorAll('.navigation') as any)?.forEach(\n        (n: HTMLElement) => {\n          if (n) {\n            n?.style.setProperty(\n              '--header-height',\n              header.getBoundingClientRect().height + 'px',\n            )\n          }\n        },\n      )\n      ;(document.querySelector('.searchbox') as HTMLElement)?.style.setProperty(\n        '--header-height',\n        header.getBoundingClientRect().height + 'px',\n      )\n    }, [])\n\n    useEffect(() => {\n      const header = document.querySelector('.header')\n      if (!header) return\n      if (GlobalState.isMenuOpen) {\n        header.classList.add('border-none')\n      } else {\n        header.classList.remove('border-none')\n      }\n    }, [GlobalState.isMenuOpen])\n\n    return (\n      <InViewComponent delay={delay} animationClass=\"apear\">\n        <header\n          className={classNames(\n            'header',\n            isAbsolute && 'absolute',\n            !isAbsolute && 'fixed',\n          )}\n          ref={headerRef}\n        >\n          <div className=\"header__container\">\n            <div\n              className=\"header__menu\"\n              onClick={() => {\n                if (!GlobalState.menuTab) {\n                  changeMenuState()\n                } else {\n                  runInAction(() => {\n                    GlobalState.menuTab = 0\n                  })\n                }\n              }}\n            >\n              <IconComponent\n                name={'menu/burger'}\n                className={classNames(!GlobalState.isMenuOpen && 'active')}\n              />\n              <IconComponent\n                name={'menu/close'}\n                className={classNames(\n                  'header__menu-icon',\n                  GlobalState.isMenuOpen && !GlobalState.menuTab && 'active',\n                )}\n              />\n              <IconComponent\n                name={'ic'}\n                className={classNames(\n                  'header__menu-arrow',\n                  GlobalState.isMenuOpen && GlobalState.menuTab && 'active',\n                )}\n              />\n            </div>\n\n            <div\n              className=\"header__left\"\n              onClick={() => (window.location.href = '/')}\n            >\n              <ImageComponent\n                classStr=\"header__logo\"\n                src={header?.logo || ''}\n                alt={header?.altLogo}\n              />\n            </div>\n            <Navigation classStr={!isAbsolute ? 'fixed' : 'absolute'} />\n            <Button\n              isLink={false}\n              action={changeSearchState}\n              inner={<IconComponent name=\"Search copy\" />}\n              classStr=\"button-search beige\"\n            />\n          </div>\n        </header>\n      </InViewComponent>\n    )\n  },\n)\n\nexport default Header\n","/Users/macbook/Desktop/be-relax — копия/components/common/IconComponent/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/ImageComponent/index.tsx",["871"],[],"import { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\n\nconst ImageComponent = observer(\n  ({\n    src,\n    classStr = '',\n    onClick = () => {},\n    alt = 'be relax',\n  }: {\n    src: string | null\n    classStr?: string\n    onClick?: () => void\n    alt?: string\n  }) => {\n    const [image, setImage] = useState('')\n    const isLoaded = useRef<any>(false)\n    useEffect(() => {\n      if (!src || isLoaded.current) return\n      if (src.includes('svg')) {\n        setImage(src)\n        isLoaded.current = true\n        return\n      }\n      fetch(src)\n        .then((fetchResponse) => {\n          if (fetchResponse.ok) {\n            return fetchResponse\n          }\n        })\n        .then((response: any) => {\n          if (response) {\n            return src.includes('svg')\n              ? response!.arrayBuffer()\n              : response!.blob()\n          }\n        })\n        .then((imageBlob) => {\n          if (imageBlob) {\n            let imageObjectURL: any\n\n            if (src.includes('svg')) {\n              const buffer = new Buffer(imageBlob)\n              setImage('data:image/svg+xml;base64,' + buffer.toString('base64'))\n            } else {\n              imageObjectURL = URL.createObjectURL(imageBlob)\n              setImage(imageObjectURL)\n            }\n          }\n        })\n        .catch((e) => console.log(e))\n      isLoaded.current = true\n    }, [src])\n    return (\n      <img\n        src={image || src || ''}\n        alt={alt}\n        className={classStr}\n        onClick={onClick}\n      />\n    )\n  },\n)\n\nexport default ImageComponent\n","/Users/macbook/Desktop/be-relax — копия/components/common/ImgBackground/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/InViewComponent/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Input/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Layout/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/MainSelect/index.tsx",["872"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport useClickOutSide from '../../../hooks/ClickOutSide'\nimport { useWindowDimensions } from '../../../hooks/getWindowDimensions'\nimport GlobalState from '../../../stores/GlobalState'\nimport CheckBox from '../CheckBox'\nimport { IconComponent } from '../IconComponent'\nimport RadioButton from '../RadioButton'\n\nconst Select = observer(\n  ({\n    placeholder,\n    dt,\n    getValue,\n    multiple,\n    defaultValue = '',\n  }: {\n    placeholder: string\n    dt: any\n    getValue: (value: any) => void\n    multiple: boolean\n    defaultValue?: string\n  }) => {\n    const [open, setOpen] = useState(false)\n    const ref = useRef<any>(null)\n    const outside = useClickOutSide(ref)\n    const [valueMultiple, setMultipleValue] = useState(Array())\n    const [value, setValue] = useState('')\n\n    const [isVisible, setVisible] = useState(false)\n    useEffect(() => {\n      if (outside) {\n        setOpen(false)\n      }\n    }, [outside])\n\n    useEffect(() => {\n      if (!value.length && defaultValue.length) {\n        setValue(defaultValue)\n      }\n    }, [defaultValue, value])\n\n    useEffect(() => {\n      if (!open) {\n        setTimeout(() => {\n          setVisible(false)\n        }, 400)\n        if (multiple) {\n          if (valueMultiple.length) {\n            getValue(valueMultiple)\n          } else getValue([])\n        } else {\n          if (value.length) {\n            getValue(value)\n          } else getValue('')\n        }\n      } else {\n        setVisible(true)\n      }\n    }, [open, valueMultiple, value])\n\n    return (\n      <div\n        className={classNames('select', open && 'open', isVisible && 'visible')}\n        ref={ref}\n      >\n        <div className=\"select__top\" onClick={() => setOpen(!open)}>\n          {\n            <span className=\"select__value\">\n              {!multiple ? (\n                <>{value?.length ? value : placeholder}</>\n              ) : (\n                <>\n                  {valueMultiple.length\n                    ? valueMultiple.join(', ')\n                    : placeholder}\n                </>\n              )}\n            </span>\n          }\n          <IconComponent name={'ic'} />\n        </div>\n        <div\n          className=\"select__list\"\n          onScroll={() => {\n            GlobalState.locoScroll && GlobalState.locoScroll.stop()\n          }}\n          onMouseLeave={() =>\n            GlobalState.locoScroll && GlobalState.locoScroll.start()\n          }\n        >\n          {dt?.map((d: any, i: number) => (\n            <div className=\"select__item\" key={i}>\n              {multiple ? (\n                <CheckBox\n                  value={valueMultiple.includes(d)}\n                  returnValue={(val) => {\n                    let vl = valueMultiple\n                    if (val) {\n                      vl.push(d)\n                    } else vl = vl.filter((v) => v != d)\n                    setMultipleValue([...vl])\n                  }}\n                  label={d}\n                />\n              ) : (\n                <RadioButton\n                  value={value == d}\n                  returnValue={(val) => {\n                    setValue(d)\n                  }}\n                  label={d}\n                />\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    )\n  },\n)\n\nexport default Select\n","/Users/macbook/Desktop/be-relax — копия/components/common/Map/index.tsx",["873","874"],[],"import {\n  GoogleMap,\n  OverlayView,\n  MarkerF,\n  Marker,\n  useJsApiLoader,\n  InfoWindow,\n  InfoBox,\n} from '@react-google-maps/api'\nimport classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport Link from 'next/link'\n\nimport { useRouter } from 'next/router'\nimport { Fragment, useEffect, useRef, useState } from 'react'\n\nimport loc from '../../../assets/find/loc.png'\nimport useClickOutSide from '../../../hooks/ClickOutSide'\nimport { useWindowDimensions } from '../../../hooks/getWindowDimensions'\nimport { useContentState } from '../../../hooks/RootStoreProvider'\nimport map from '../../../mocks/map'\nimport GlobalState from '../../../stores/GlobalState'\nimport { FindTabState } from '../../pages/find/Intro'\nimport { IconComponent } from '../IconComponent'\nimport InViewComponent from '../InViewComponent'\nconst containerStyle = {\n  width: '100%',\n  height: '100%',\n}\n\nconst Map = observer(({ coords }: any) => {\n  const { content } = useContentState()\n  const [showOver, setShow] = useState(false)\n  const mapRef = useRef<any>(null)\n  const [center, setCenter] = useState({\n    lat: 40.866667,\n    lng: 34.566667,\n  })\n  const [zoom, setZoom] = useState(2)\n  const [currentPosition, setPosition] = useState<any>(null)\n\n  let { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: 'AIzaSyDGhdmlq3VJzRbKTvQ9zvmvN1-nqA8Q1bU',\n  })\n\n  const { width, height } = useWindowDimensions()\n\n  const list: any = []\n\n  coords.forEach((co: any) => {\n    co.list.forEach((li: any) => {\n      list.push(li)\n    })\n  })\n  const ref = useRef<any>(null)\n  useEffect(() => {\n    if (!ref.current) return\n\n    if (width <= 900) {\n      document.querySelector('.smooth')?.addEventListener('click', (e) => {\n        if (!ref.current) return\n\n        if (!ref.current?.contains(e.target)) {\n          GlobalState.locoScroll && GlobalState.locoScroll.start()\n        }\n      })\n      document.querySelector('.smooth')?.addEventListener('touchend', (e) => {\n        if (!ref.current) return\n        if (!ref.current?.contains(e.target)) {\n          GlobalState.locoScroll && GlobalState.locoScroll.start()\n        }\n      })\n    }\n  }, [width])\n\n  useEffect(() => {\n    if (width <= 900 && FindTabState.location && mapRef.current) {\n      requestAnimationFrame(() => {\n        mapRef.current.panTo(\n          new window.google.maps.LatLng(\n            +(FindTabState.location as any)?.lat,\n            +(FindTabState.location as any)?.lng,\n          ),\n        )\n        setTimeout(() => {\n          setCenter({\n            lat: +(FindTabState.location as any)?.lat,\n            lng: +(FindTabState.location as any)?.lng,\n          })\n        }, 500)\n      })\n    }\n  }, [width, FindTabState.location])\n\n  useEffect(() => {\n    if (!FindTabState.tab && width <= 900) {\n      setShow(false)\n    }\n  }, [FindTabState.tab, width])\n\n  if (!isLoaded) return <div className=\"map\"></div>\n\n  const locatorSizes =\n    width > 1024 ? 48 : width <= 1024 && width > 900 ? 38 : 32\n\n  return (\n    <div\n      className={classNames(\n        'map',\n        width <= 900 && FindTabState.tab != 1 && 'none',\n      )}\n      ref={ref}\n    >\n      <InViewComponent delay={1}>\n        <div className=\"map__zooms\">\n          <div className=\"map__zoom in\" onClick={() => setZoom(zoom + 1)}>\n            <IconComponent name={'menu/Plus'} />\n          </div>\n          <div\n            className=\"map__zoom out\"\n            onClick={() => {\n              if (zoom) {\n                setZoom(zoom - 1)\n              }\n            }}\n          >\n            <IconComponent name={'find/Minus'} />\n          </div>\n        </div>\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={zoom}\n          onLoad={(map: any) => {\n            mapRef.current = map\n          }}\n          onUnmount={(map) => {\n            mapRef.current = map\n          }}\n          options={{\n            styles: map,\n            zoomControl: false,\n            mapTypeControl: false,\n            scaleControl: true,\n            panControl: true,\n            streetViewControl: false,\n            fullscreenControl: false,\n            scrollwheel: true,\n            tilt: 0,\n            disableDefaultUI: true,\n          }}\n          onMouseOut={() =>\n            GlobalState.locoScroll && GlobalState.locoScroll.start()\n          }\n          onMouseMove={() =>\n            GlobalState.locoScroll && GlobalState.locoScroll.stop()\n          }\n          onClick={(e) => {\n            setShow(false)\n          }}\n          onDrag={() => {\n            GlobalState.locoScroll && GlobalState.locoScroll.stop()\n          }}\n          onZoomChanged={() => {\n            if (mapRef.current) {\n              setZoom(mapRef.current.getZoom())\n            }\n          }}\n        >\n          {coords.map((ci: any, i: number) => (\n            <Fragment key={i}>\n              {ci.list.map((li: any, id: number) => (\n                <Fragment key={id}>\n                  <Marker\n                    zIndex={2}\n                    icon={{\n                      url: loc.src,\n                      scaledSize: new window.google.maps.Size(\n                        locatorSizes,\n                        locatorSizes,\n                      ),\n                      size: new window.google.maps.Size(\n                        locatorSizes,\n                        locatorSizes,\n                      ),\n                    }}\n                    onClick={() => {\n                      if (showOver) {\n                        setShow(false)\n\n                        setTimeout(() => {\n                          setPosition(li)\n                        }, 500)\n                        requestAnimationFrame(() => {\n                          mapRef.current.panTo(\n                            new window.google.maps.LatLng(\n                              +li.locations.lat,\n                              +li.locations.lng,\n                            ),\n                          )\n                          setTimeout(() => {\n                            setCenter({\n                              lat: +li.locations.lat,\n                              lng: +li.locations.lng,\n                            })\n                          }, 500)\n                        })\n                        setTimeout(() => {\n                          setShow(true)\n                        }, 501)\n                        return\n                      }\n\n                      requestAnimationFrame(() => {\n                        mapRef.current.panTo(\n                          new window.google.maps.LatLng(\n                            +li.locations.lat,\n                            +li.locations.lng,\n                          ),\n                        )\n                        setTimeout(() => {\n                          setCenter({\n                            lat: +li.locations.lat,\n                            lng: +li.locations.lng,\n                          })\n                        }, 500)\n                      })\n                      setPosition(li)\n                      setTimeout(() => {\n                        setShow(true)\n                      }, 500)\n                    }}\n                    position={{\n                      lat: +li.locations.lat,\n                      lng: +li.locations.lng,\n                    }}\n                  ></Marker>\n                </Fragment>\n              ))}\n            </Fragment>\n          ))}\n\n          <InfoBox\n            position={\n              new window.google.maps.LatLng(\n                +currentPosition?.locations.lat,\n                +currentPosition?.locations.lng,\n              )\n            }\n          >\n            <div className={classNames('map__pop', showOver && 'show')}>\n              <div className=\"map__pop-title\">{currentPosition?.title}</div>\n              <div className=\"map__pop-text\">{currentPosition?.text}</div>\n              <Link href={`${currentPosition?.link}`}>\n                <a className=\"map__pop-link\">\n                  {content?.cardDetails} <IconComponent name={'arrow'} />\n                </a>\n              </Link>\n              <IconComponent name={'find/loc'} className=\"loc-svg\" />\n            </div>\n          </InfoBox>\n        </GoogleMap>\n      </InViewComponent>\n    </div>\n  )\n})\n\nexport default Map\n","/Users/macbook/Desktop/be-relax — копия/components/common/Menu/index.tsx",["875"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { runInAction } from 'mobx'\nimport GlobalState from '../../../stores/GlobalState'\nimport { IconComponent } from '../IconComponent'\nimport { Fragment, useEffect, useState } from 'react'\nimport Button from '../Button'\nimport SocialLink from '../SocialLink'\nimport { useContentState } from '../../../hooks/RootStoreProvider'\nimport Link from 'next/link'\n\nconst Menu = observer(() => {\n  const [tab, setTab] = useState(0)\n  const { header, footer } = useContentState()\n\n  useEffect(() => {\n    const s = document.querySelector('.menu')\n    const header = document.querySelector('.header')\n\n    if (!s || !header) return\n    ;(s as any).style.setProperty(\n      '--header-height',\n      `${header.getBoundingClientRect().height}px`,\n    )\n  }, [])\n\n  useEffect(() => {\n    if (GlobalState.locoScroll) {\n      GlobalState.isMenuOpen\n        ? (GlobalState.locoScroll as any).stop()\n        : (GlobalState.locoScroll as any).start()\n    }\n  }, [GlobalState.isMenuOpen, GlobalState.locoScroll])\n\n  \n\n  return (\n    <section className={classNames('menu', GlobalState.isMenuOpen && 'open')}>\n      <div className=\"menu__container\">\n        <div\n          className={classNames(\n            'menu__screen',\n            !GlobalState.menuTab && 'show',\n            GlobalState.menuTab && 'off',\n          )}\n        >\n          {header?.menu?.map((hi: any, id: any) => (\n            <div className={classNames('menu__item')} key={id}>\n              <div\n                className=\"menu__item-top\"\n                onClick={() => {\n                  if (hi.submenu.length) {\n                    setTab(id)\n                    runInAction(() => {\n                      GlobalState.menuTab = 1\n                    })\n                  }\n                }}\n              >\n                {hi.submenu.length ? (\n                  <div className=\"menu__link\"> {hi.title}</div>\n                ) : (\n                  <Link href={hi.link}>\n                    <a className=\"menu__link\">{hi.title}</a>\n                  </Link>\n                )}\n\n                {hi.submenu.length ? (\n                  <IconComponent\n                    name={'ic'}\n                    className=\"\"\n                    onClick={() => {\n                      setTab(id)\n                      runInAction(() => {\n                        GlobalState.menuTab = 1\n                      })\n                    }}\n                  />\n                ) : (\n                  <></>\n                )}\n              </div>\n            </div>\n          ))}\n          <div className=\"menu__screen-bottom\">\n            {footer?.socials?.map((so: any, i: any) => (\n              <SocialLink link={so.link} icon={so.icon} key={i} />\n            ))}\n          </div>\n        </div>\n        <div\n          className={classNames('menu__screen', GlobalState.menuTab && 'show')}\n        >\n          {header?.menu?.map((hi: any, id: number) => (\n            <Fragment key={id}>\n              {hi?.submenu?.length && tab == id ? (\n                <div className=\"menu__screen-title\">{hi.title}</div>\n              ) : (\n                <></>\n              )}\n              {hi?.submenu?.length ? (\n                <div\n                  className={classNames(\n                    'menu__item-content',\n                    tab == id && 'display',\n                  )}\n                >\n                  <div\n                    className={classNames(\n                      'menu__item-bottom',\n                      !hi.isProducts && 'column',\n                    )}\n                  >\n                    {hi?.submenu?.map((sub: any, i: number) => (\n                      <div className=\"menu__subitem\" key={i}>\n                        {hi.isProducts ? (\n                          <Link href={sub.link}>\n                            <a className=\"menu__subitem-title\">{sub.title}</a>\n                          </Link>\n                        ) : (\n                          <></>\n                        )}\n\n                        <div className=\"menu__subitem-list\">\n                          {(sub as any)?.list ? (\n                            (sub as any)?.list?.map((li: any, idx: number) => (\n                              <Link key={idx} href={li.link}>\n                                <a className=\"menu__subitem-text\">{li.title}</a>\n                              </Link>\n                            ))\n                          ) : (\n                            <Button\n                              isLink\n                              link={(sub as any).link}\n                              classStr=\"white p16p20 button-arrow button-svg\"\n                              inner={<>{sub.title}</>}\n                            />\n                          )}\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  {hi.isProducts && (\n                    <div className=\"menu__bottom\">\n                      <Button\n                        isLink\n                        link={hi.link}\n                        classStr=\"white p16p20 button-arrow button-svg\"\n                        inner={\n                          <>\n                            See All {hi.title}\n                            <IconComponent name={'arrow'} className=\"\" />\n                          </>\n                        }\n                      />\n                    </div>\n                  )}\n                </div>\n              ) : (\n                <></>\n              )}\n            </Fragment>\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n})\n\nexport default Menu\n","/Users/macbook/Desktop/be-relax — копия/components/common/MusicBox/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Navigation/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/NearItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/NewsPost/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/OfferItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/PartnerItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/PhoneSelect/index.tsx",["876"],[],"import { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport { UserData } from '../../pages/booking/Steps'\nimport GlobalState from '../../../stores/GlobalState'\nimport ImageComponent from '../ImageComponent'\nimport classNames from 'classnames'\nimport useClickOutSide from '../../../hooks/ClickOutSide'\nimport { IconComponent } from '../IconComponent'\n\nconst PhoneSelect = observer(\n  ({\n    dt,\n    placeholder,\n    isRequired,\n    setPhoneNumber,\n    resetField,\n  }: {\n    dt: any\n    placeholder: string\n    isRequired: boolean\n    resetField?: boolean\n    setPhoneNumber?: (value: string) => void\n  }) => {\n    const ref = useRef<any>(null)\n    const [country, setCountry] = useState<any>(null)\n    const [show, setShow] = useState(false)\n    const [phone, setPhone] = useState('')\n    const outside = useClickOutSide(ref)\n\n    useEffect(() => {\n      if (outside) {\n        setShow(false)\n      }\n    }, [outside])\n\n    useEffect(() => {\n      if (!country) {\n        setCountry({\n          code: dt[0].code,\n          flag: dt[0].flag,\n        })\n      }\n    }, [dt, country])\n\n    useEffect(() => {\n      if (resetField) {\n        setCountry({\n          code: dt[0].code,\n          flag: dt[0].flag,\n        })\n        setPhone('')\n      }\n    }, [resetField, dt])\n\n    useEffect(() => {\n      if (!show && country && phone.length) {\n        runInAction(() => {\n          UserData.phone = `${country.code}${phone}`\n        })\n        setPhoneNumber && setPhoneNumber(`${country.code}${phone}`)\n      }\n    }, [show, country, phone])\n\n    return (\n      <section className={classNames('phone-select', show && 'show')} ref={ref}>\n        <div className=\"phone-select__top\">\n          <div className=\"phone-select__flag\" onClick={() => setShow(!show)}>\n            {country && (\n              <>\n                <ImageComponent src={country.flag} alt={''} />\n                {country.code}\n              </>\n            )}\n            <IconComponent name=\"ic\" />\n          </div>\n          <input\n            onClick={() => setShow(false)}\n            required={isRequired}\n            placeholder={placeholder}\n            className=\"phone-select__input\"\n            value={phone}\n            name=\"phone\"\n            onChange={(e) => {\n              if (\n                !/[A-Za-zА-Яа-яїі]/g.test(e.target.value) &&\n                e.target.value.length <= 15\n              ) {\n                setPhone(e.target.value)\n                setPhoneNumber && setPhoneNumber(`${country.code}${e.target.value}`)\n              }\n            }}\n          />\n        </div>\n        <div\n          className=\"phone-select__list\"\n          onMouseLeave={() => {\n            GlobalState.locoScroll && GlobalState.locoScroll.start()\n          }}\n          onScroll={() => {\n            GlobalState.locoScroll && GlobalState.locoScroll.stop()\n          }}\n        >\n          {dt?.map((country: any, id: number) => (\n            <div\n              className=\"phone-select__item\"\n              key={id}\n              onClick={() => {\n                setCountry({\n                  ...country,\n                  code: country.code,\n                  flag: country.flag,\n                })\n                setShow(false)\n              }}\n            >\n              <div className=\"phone-select__flag\">\n                <ImageComponent src={country.flag} alt=\"\" />\n                {country.code}\n              </div>\n              {country.title}\n            </div>\n          ))}\n        </div>\n      </section>\n    )\n  },\n)\nexport default PhoneSelect\n","/Users/macbook/Desktop/be-relax — копия/components/common/Preloader/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/ProductCat/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/ProductItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/RadioButton/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/RetailMap/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/RetailPop/index.tsx",["877"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport useClickOutSide from '../../../hooks/ClickOutSide'\nimport { useWindowDimensions } from '../../../hooks/getWindowDimensions'\nimport { useContentState } from '../../../hooks/RootStoreProvider'\nimport { retailerLocationsList } from '../../../stores/ContentState'\nimport GlobalState, { changeRetailerState } from '../../../stores/GlobalState'\nimport { IconComponent } from '../IconComponent'\nimport RetailerSelect from '../RetailerSelect'\n\nimport RetailMap from '../RetailMap'\nimport Select from '../Select'\nimport Title54 from '../Title54'\n\nconst RetailPop = observer(() => {\n  const { content } = useContentState()\n  const [value, setState] = useState<any>(null)\n  const [results, setResults] = useState(Array())\n  const [show, setShow] = useState(false)\n  const [showAdd, setShowAdd] = useState(false)\n  const { width } = useWindowDimensions()\n  const ref = useRef<any>(null)\n  const outSide = useClickOutSide(ref)\n  const [currentLocation, setLocation] = useState({\n    lat: 40.866667,\n    lng: 34.566667,\n  })\n  useEffect(() => {\n    setTimeout(() => {\n      setShow(true)\n    }, 300)\n  }, [])\n\n  useEffect(() => {\n    if (value?.title?.length || value) {\n      search(value)\n    } else {\n      retailerLocationsList().then((r) => {\n        setResults(r)\n        setShowAdd(false)\n      })\n    }\n  }, [value])\n\n  const search = async (value: any) => {\n    await retailerLocationsList().then((r) => {\n      const res = r.filter((c: any) => {\n        let lc = (c.title + c.text).toLowerCase()\n        let searchText = value?.title ? value?.title : value\n        if (lc.includes(searchText?.toLowerCase())) {\n          return c\n        }\n      })\n\n      if (res.length) {\n        setShowAdd(true)\n      }\n\n      setResults(res)\n    })\n  }\n\n  useEffect(() => {\n    if (!GlobalState.isRetailerOpen) {\n      GlobalState.locoScroll && GlobalState.locoScroll.start()\n    }\n  }, [GlobalState.isRetailerOpen])\n\n  useEffect(() => {\n    const cards = document.querySelectorAll('.location-card')\n    if (cards) {\n      cards.forEach((c: any, i: number) => {\n        if (c) {\n          const lat = c.dataset.coordlat,\n            lng = c.dataset.coordlng\n\n          if (+lat == +currentLocation.lat && +lng == +currentLocation.lng) {\n            c.classList.add('active')\n            c.scrollIntoView({\n              behavior: 'smooth',\n              block: 'start',\n              inline: 'nearest',\n            })\n          } else c.classList.remove('active')\n        }\n      })\n    }\n  }, [currentLocation])\n\n  useEffect(() => {\n    if (outSide) {\n      GlobalState.locoScroll && GlobalState.locoScroll.start()\n    }\n  }, [outSide])\n\n  return (\n    <section\n      className={classNames('retail-pop', GlobalState.isRetailerOpen && 'show')}\n    >\n      <IconComponent\n        name={'menu/close'}\n        className=\"retail-pop__close\"\n        onClick={changeRetailerState}\n      />\n\n      <div className=\"retail-pop__container\">\n        <div className=\"retail-pop__map\">\n          <div className={classNames('retail-pop__tooltip', show && 'show')}>\n            <div\n              className=\"retail-pop__tooltip-text\"\n              dangerouslySetInnerHTML={{ __html: content?.pop?.tooltip }}\n            ></div>\n            <IconComponent\n              name={'menu/close'}\n              className=\"retail-pop__tooltip-close\"\n              onClick={() => setShow(false)}\n            />\n          </div>\n          <RetailMap\n            results={results}\n            location={currentLocation}\n            setPos={(value: any) => setLocation(value)}\n          />\n        </div>\n        <div className=\"retail-pop__right\">\n          <Title54 text={content?.pop?.title} classStr=\"retail-pop__title\" />\n          <RetailerSelect\n            placeholder={content?.pop?.placeholder}\n            getValue={setState}\n          />\n          {value?.title?.length && showAdd ? (\n            <div className=\"retail-pop__subtitle\">\n              {results?.length} “{value?.title}” locations\n            </div>\n          ) : (\n            <></>\n          )}\n          {results.length ? (\n            <div\n              className=\"retail-pop__list\"\n              ref={ref}\n              onScroll={() =>\n                width > 1024 &&\n                GlobalState.locoScroll &&\n                GlobalState.locoScroll.stop()\n              }\n              onMouseLeave={() =>\n                GlobalState.locoScroll && GlobalState.locoScroll.start()\n              }\n            >\n              {results.map((re, id) => (\n                <LocationCard\n                  dt={re}\n                  key={id}\n                  // setLocation={setLocation}\n                  isActive={\n                    currentLocation &&\n                    currentLocation?.lat == re.coords.lat &&\n                    currentLocation?.lng == re.coords.lng\n                  }\n                />\n              ))}\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n      </div>\n    </section>\n  )\n})\n\nexport default RetailPop\n\nexport const LocationCard = observer(\n  ({\n    dt,\n    // setLocation,\n    isActive,\n  }: {\n    dt: any\n    // setLocation: (value: any) => void\n    isActive: boolean\n  }) => {\n    const [show, setShow] = useState(false)\n    const ref = useRef<any>(null)\n\n    useEffect(() => {\n      if (!show) {\n        ref.current && ref.current.style.setProperty('--text-height', 0 + 'px')\n      } else {\n        ref.current &&\n          ref.current.style.setProperty(\n            '--text-height',\n            ref.current.scrollHeight + 12 + 'px',\n          )\n      }\n    }, [show])\n    return (\n      <section\n        className={classNames('location-card')}\n        data-coordlat={dt.coords.lat}\n        data-coordlng={dt.coords.lng}\n        // onClick={() =>\n        //   setLocation({\n        //     lat: dt.coords.lat,\n        //     lng: dt.coords.lng,\n        //   })\n        // }\n      >\n        <div className=\"location-card__top\">\n          <IconComponent\n            name={'retail/plane'}\n            className={classNames('', dt.isAirport && 'visible')}\n          />\n          <IconComponent\n            name={'retail/location'}\n            className={classNames('shop', !dt.isAirport && 'visible')}\n          />\n          <div className=\"location-card__title\">{dt?.title}</div>\n        </div>\n        <div className=\"location-card__content\">\n          <div className=\"location-card__text\">{dt?.text}</div>\n          <div\n            className={classNames('location-card__more', show && 'show')}\n            onClick={(e) => {\n              e.stopPropagation()\n              setShow(!show)\n            }}\n          >\n            {!show ? 'See' : 'Hide'} Details <IconComponent name={'ic'} />\n          </div>\n          <div className=\"location-card__addInfo\" ref={ref}>\n            <div className=\"location-card__text\">{dt?.schedule}</div>\n            <div className=\"location-card__text\">{dt?.phone}</div>\n          </div>\n        </div>\n      </section>\n    )\n  },\n)\n","/Users/macbook/Desktop/be-relax — копия/components/common/ScrollTop/index.tsx",["878"],[],"import { observer } from 'mobx-react'\nimport { useRouter } from 'next/router'\nimport { useEffect } from 'react'\nimport GlobalState from '../../../stores/GlobalState'\n\nconst ScrollTop = observer(() => {\n  const router = useRouter()\n  useEffect(() => {\n    router.beforePopState(({ as }): any => {\n      console.log('back')\n\n      if (as !== router.asPath) {\n        setTimeout(() => {\n          const pos = sessionStorage.getItem('position')\n          if (!pos) return\n\n          const posObj = JSON.parse(pos)\n          if (!posObj) return\n\n          if (!GlobalState.isTouch) {\n            GlobalState.locoScroll &&\n              GlobalState.locoScroll.scrollTo(posObj.y, {\n                duration: 2000,\n              })\n          } else {\n            window.scrollTo({\n              top: posObj.y,\n              behavior: 'smooth',\n            })\n          }\n\n          sessionStorage.removeItem('position')\n        }, 600)\n      }\n      return true\n    })\n\n    return () => {\n      router.beforePopState(() => true)\n    }\n  }, [router, GlobalState.locoScroll, GlobalState.isTouch])\n\n  return <></>\n})\n\nexport default ScrollTop\n","/Users/macbook/Desktop/be-relax — копия/components/common/ScrollTopButton/index.tsx",["879"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { useEffect, useState } from 'react'\nimport GlobalState from '../../../stores/GlobalState'\nimport { IconComponent } from '../IconComponent'\n\nconst ScrollTopButton = observer(() => {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    if (!GlobalState.isTouch) {\n      GlobalState.locoScroll &&\n        GlobalState.locoScroll.on('scroll', (args: any) => {\n          if (args.scroll.y > 150) {\n            setShow(true)\n          } else setShow(false)\n        })\n    } else {\n      window.addEventListener('scroll', (e) => {\n        if (window.scrollY > 150) {\n          setShow(true)\n        } else setShow(false)\n      })\n    }\n  }, [GlobalState.locoScroll, GlobalState.isTouch])\n  return (\n    <div\n      className={classNames(\n        'scroll-button',\n        show && 'show',\n        GlobalState.isTouch && 'visible',\n      )}\n      onClick={() => {\n        if (!GlobalState.isTouch) {\n          GlobalState.locoScroll && GlobalState.locoScroll.scrollTo(0, 0)\n        } else\n          window.scrollTo({\n            top: 0,\n            behavior: 'smooth',\n          })\n      }}\n    >\n      <IconComponent name={'ic'} />\n    </div>\n  )\n})\n\nexport default ScrollTopButton\n","/Users/macbook/Desktop/be-relax — копия/components/common/SearchBox/index.tsx",["880"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { FormEvent, useCallback, useEffect, useState } from 'react'\nimport { useContentState } from '../../../hooks/RootStoreProvider'\nimport GlobalState from '../../../stores/GlobalState'\nimport Button from '../Button'\nimport { IconComponent } from '../IconComponent'\nimport Input from '../Input'\n\nconst SearchBox = observer(() => {\n  const { header } = useContentState()\n  const [value, setValue] = useState('')\n  const [isFocus, setFocus] = useState(false)\n  const search = useCallback(\n    (e: FormEvent) => {\n      e.preventDefault()\n      if (!value.length) return\n\n      sessionStorage.setItem('search-value', value)\n      window.location.href = '/search'\n    },\n    [value],\n  )\n\n  useEffect(() => {\n    if (!GlobalState.isSearchOpen) {\n      setValue('')\n      document.querySelector('.header.fixed')?.classList.remove('header-bg')\n\n      setFocus(false)\n    } else {\n      document.querySelector('.header.fixed')?.classList.add('header-bg')\n      setTimeout(() => {\n        setFocus(true)\n      }, 300)\n    }\n  }, [GlobalState.isSearchOpen])\n  return (\n    <section\n      className={classNames('searchbox', GlobalState.isSearchOpen && 'show')}\n    >\n      <div className=\"searchbox__container\">\n        <form action=\"/search\" onSubmit={(e) => search(e)}>\n          <Input\n            placeHolder=\"\"\n            value={value}\n            type=\"search\"\n            setValue={setValue}\n            isFocus={isFocus}\n          />\n        </form>\n        <Button\n          isLink={false}\n          action={search}\n          classStr=\"beige button-arrow button-svg p20p40\"\n          inner={\n            <>\n              {header.searchbuttonTitle}\n              <IconComponent name={'arrow'} />\n            </>\n          }\n        />\n      </div>\n    </section>\n  )\n})\n\nexport default SearchBox\n","/Users/macbook/Desktop/be-relax — копия/components/common/Select/index.tsx",["881","882","883","884"],[],"import classNames from 'classnames'\nimport { observable, runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { Fragment, useCallback, useEffect, useRef, useState } from 'react'\nimport { arrayMinDistance, distance } from '../../../funcs/distance'\nimport useClickOutSide from '../../../hooks/ClickOutSide'\nimport { useWindowDimensions } from '../../../hooks/getWindowDimensions'\nimport GlobalState from '../../../stores/GlobalState'\nimport { UserData } from '../../pages/booking/Steps'\nimport { FindTabState } from '../../pages/find/Intro'\nimport { Airports } from '../../pages/find/PlacesList'\nimport Button from '../Button'\nimport { IconComponent } from '../IconComponent'\n\nexport const SelectState = observable({\n  selected: null,\n})\n\nconst Select = observer(\n  ({\n    placeholder,\n    value,\n    dt,\n    isLocate = false,\n    withSearch = true,\n    isTimeSelect = false,\n    isSearchIcon = false,\n  }: {\n    placeholder: string\n    value: string\n    dt: Array<any>\n    isLocate: boolean\n    withSearch?: boolean\n    isTimeSelect?: boolean\n    isSearchIcon?: boolean\n  }) => {\n    const [userLocation, setLocation] = useState<any>(null)\n    const ref = useRef<HTMLElement | null>(null)\n    const outside = useClickOutSide(ref)\n    const [val, setVal] = useState(value)\n    const [open, setOpen] = useState(false)\n    const [selected, setSelected] = useState<any>(null)\n    const [list, setList] = useState(null)\n    const { width, height } = useWindowDimensions()\n\n    const getLocation = useCallback(() => {\n      const options = {\n        enableHighAccuracy: true,\n        timeout: 1000,\n      }\n      if (window.navigator && 'geolocation' in navigator) {\n        navigator.geolocation.getCurrentPosition(\n          (position) => {\n            const { latitude, longitude } = position.coords\n            setLocation({ lat: latitude, lng: longitude })\n            setOpen(false)\n          },\n          () => {\n            console.log('deny')\n          },\n          options,\n        )\n      }\n    }, [])\n\n    useEffect(() => {\n      if (outside) {\n        setOpen(false)\n      }\n    }, [outside])\n\n    useEffect(() => {\n      if (!open) {\n        setList(null)\n        GlobalState.locoScroll && GlobalState.locoScroll.start()\n      }\n    }, [open])\n\n    useEffect(() => {\n      if (selected && isLocate) {\n        const res: any = []\n        dt.forEach((d) => {\n          if (d.continent == selected?.continent && !selected?.title.length) {\n            res.push(d)\n            return\n          }\n\n          if (d.continent == selected?.continent && selected?.title.length) {\n            const sublist = d.list.filter(\n              (di: any) => di.title == selected?.title,\n            )\n            res.push({\n              continent: d.continent,\n              list: sublist,\n            })\n            return\n          }\n        })\n\n        runInAction(() => {\n          Airports.list = res\n          SelectState.selected = selected\n          FindTabState.location = res[0].list[0].locations\n        })\n\n        const smooth = document.querySelector('.smooth')\n        const items = document.querySelector('.places')\n        const header = document.querySelector('.header')\n        if (!smooth || !items || !header) return\n\n        if (width > 900) {\n          GlobalState.locoScroll &&\n            GlobalState.locoScroll.scrollTo(items, {\n              offset: -header.getBoundingClientRect().height,\n            })\n        }\n\n        if (width <= 900 && !FindTabState.tab) {\n          GlobalState.locoScroll &&\n            GlobalState.locoScroll.scrollTo(items, {\n              offset: -header.getBoundingClientRect().height,\n            })\n        }\n      }\n      if (selected && isTimeSelect) {\n        runInAction(() => {\n          UserData.time = selected\n        })\n      }\n    }, [selected, dt, width, isTimeSelect, isLocate])\n\n    useEffect(() => {\n      if (!SelectState.selected && selected && isLocate) {\n        setSelected(null)\n      }\n      if (!isLocate && selected && !UserData.time) {\n        setSelected(null)\n      }\n    }, [SelectState.selected, UserData.time, selected, isLocate])\n\n    useEffect(() => {\n      if (userLocation && isLocate) {\n        const res: any = []\n        const locations: any = []\n        dt &&\n          dt?.map((d) => {\n            d?.list.forEach((el: any) => {\n              locations.push(el)\n            })\n          })\n\n        locations.forEach((lo: any) => {\n          lo.distance = distance(\n            userLocation?.lat,\n            userLocation?.lng,\n            lo?.locations.lat,\n            lo?.locations.lng,\n            'N',\n          )\n        })\n\n        const min = arrayMinDistance(locations)\n\n        dt &&\n          dt?.map((d) => {\n            const val = d?.list.filter((el: any) => el.title == min.title)\n            if (val.length) {\n              res.push({\n                ...d,\n                list: val,\n              })\n            }\n          })\n\n        runInAction(() => {\n          Airports.list = res\n        })\n\n        const smooth = document.querySelector('.smooth')\n        const items = document.querySelector('.places')\n        const header = document.querySelector('.header')\n        if (!smooth || !items || !header) return\n\n        if (!GlobalState.isTouch) {\n          GlobalState.locoScroll &&\n            GlobalState.locoScroll.scrollTo(items, {\n              offset: -header.getBoundingClientRect().height,\n            })\n        } else {\n          window.scrollTo({\n            top: items.getBoundingClientRect().top,\n            behavior: 'smooth',\n          })\n        }\n      }\n    }, [dt, userLocation])\n\n    useEffect(() => {\n      if (val.length && isLocate && !selected) {\n        const res: any = []\n        dt &&\n          dt?.map((d) => {\n            d?.list?.map((li: any) => {\n              if (\n                li.title\n                  .toLowerCase()\n                  .slice(0, val.length)\n                  .includes(val.toLowerCase().trim())\n              ) {\n                res.push(li)\n              }\n            })\n          })\n        setList(res)\n      } else if (!val.length && isLocate) {\n        setList(null)\n      }\n    }, [val])\n\n    useEffect(() => {\n      if (!selected && isTimeSelect) {\n        setSelected(value)\n      }\n    }, [])\n\n    return (\n      <section className={classNames('loc-select', open && 'open')} ref={ref}>\n        <div\n          className=\"loc-select__top\"\n          onClick={() => {\n            if (!open) {\n              setOpen(true)\n            }\n          }}\n        >\n          {isTimeSelect && (\n            <span className=\"loc-select__value\">\n              {selected ? selected : placeholder}\n            </span>\n          )}\n          {!open && withSearch && (\n            <span className=\"loc-select__value\">\n              {selected && selected?.title.length\n                ? selected?.title\n                : selected && !selected?.title.length\n                ? selected?.continent\n                : placeholder}\n            </span>\n          )}\n          {open && withSearch && (\n            <input\n              value={val}\n              placeholder={placeholder}\n              className=\"loc-select__input\"\n              onChange={(e) => setVal(e.target.value)}\n              autoFocus={open}\n            />\n          )}\n          <Button\n            inner={\n              <>\n                <IconComponent name={isSearchIcon ? 'Search' : 'ic'} />\n              </>\n            }\n            classStr={classNames(\n              'beige button-search',\n              isSearchIcon ? 'search-btn' : '',\n            )}\n            isLink={false}\n            action={() => setOpen(!open)}\n          />\n        </div>\n        <div\n          className=\"loc-select__list\"\n          onScroll={() => {\n            GlobalState.locoScroll && GlobalState.locoScroll.stop()\n          }}\n          onMouseLeave={() =>\n            GlobalState.locoScroll && GlobalState.locoScroll.start()\n          }\n        >\n          {isLocate && !list && (\n            <div className=\"locate-me\" onClick={getLocation}>\n              <IconComponent name=\"location-point 1\" />\n              Locate me\n            </div>\n          )}\n          {isLocate && list && (\n            <>\n              {(list as any)\n                ?.sort((a: any, b: any) => a.title.localeCompare(b.title))\n                .map((li: any, id: number) => (\n                  <div\n                    className=\"loc-select__subitem\"\n                    key={id}\n                    onClick={() => {\n                      setSelected(li)\n                      setVal(li.title)\n                      setOpen(false)\n                    }}\n                  >\n                    {li.title}\n                  </div>\n                ))}\n            </>\n          )}\n          {isLocate &&\n            !list &&\n            dt?.map((d: any, i: number) => (\n              <Fragment key={i}>\n                <div\n                  className=\"loc-select__item\"\n                  onClick={() => {\n                    setSelected({\n                      title: '',\n                      continent: d.continent,\n                    })\n                    setVal(d.continent)\n                    setOpen(false)\n                  }}\n                >\n                  {d.continent}\n                </div>\n                <div className=\"loc-select__sublist\">\n                  {d.list\n                    ?.sort((a: any, b: any) => a.title.localeCompare(b.title))\n                    .map((li: any, id: number) => (\n                      <div\n                        className=\"loc-select__subitem\"\n                        key={id}\n                        onClick={() => {\n                          setSelected({\n                            title: li.title,\n                            continent: d.continent,\n                          })\n                          setVal(li.title)\n                          setOpen(false)\n                        }}\n                      >\n                        {li.title}\n                      </div>\n                    ))}\n                </div>\n              </Fragment>\n            ))}\n          {isTimeSelect &&\n            dt\n              ?.sort((a: any, b: any) => a.localeCompare(b))\n              ?.map((d, i) => (\n                <div\n                  key={i}\n                  className=\"loc-select__item\"\n                  onClick={() => {\n                    setSelected(d)\n                    setOpen(false)\n                  }}\n                >\n                  {d}\n                </div>\n              ))}\n        </div>\n      </section>\n    )\n  },\n)\n\nexport default Select\n","/Users/macbook/Desktop/be-relax — копия/components/common/SeoBlock/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/ServiceCat/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/ServiceItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/SmallPop/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/SmallPost/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/SocialLink/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Text/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Title/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Title40/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/Title54/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/common/TreatmentItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/academy/Courses/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/academy/Stories/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/booking/BookAside/index.tsx",["885"],[],"import { observer } from 'mobx-react'\nimport { Fragment, useEffect, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState from '../../../../stores/GlobalState'\nimport ImageComponent from '../../../common/ImageComponent'\nimport { BookingStep, UserData } from '../Steps'\n\nconst BookAside = observer(() => {\n  const {\n    content: { bookDetails },\n  } = useContentState()\n\n  const [scrollValue, setScroll] = useState<any>(0)\n\n  const translate = (y: number) => {\n    const smooth = document.querySelector('.smooth'),\n      main = document?.querySelector('.book-steps'),\n      container = document?.querySelector('.book-steps__content'),\n      vect = document.querySelector('.book-aside')\n    if (!smooth || !container || !vect || !main) return\n\n    var bodyRect = smooth!.getBoundingClientRect(),\n      elemRect = container.getBoundingClientRect(),\n      mainRect = main.getBoundingClientRect(),\n      offset = mainRect.top - bodyRect.top + 115,\n      offsetBottom =\n        offset + elemRect.height - vect.getBoundingClientRect().height\n    if (BookingStep.tab == 1) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n      })\n      return\n    }\n\n    if (vect.getBoundingClientRect().height >= elemRect.height) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n      })\n\n      return\n    }\n\n    if (y >= offset && y <= offsetBottom) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${\n          y - offset\n        }px, 0)`\n      })\n    }\n  }\n\n  useEffect(() => {\n    const aside = document.querySelector('.book-aside'),\n      container = document.querySelector('.book-steps__content')\n\n    if (!aside || !container) return\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (entry.contentBoxSize) {\n          translate(scrollValue)\n        }\n      }\n    })\n\n    resizeObserver.observe(aside)\n    resizeObserver.observe(container)\n  }, [scrollValue])\n\n  useEffect(() => {\n    if (\n      window.innerWidth <= 1023 ||\n      (window.innerWidth > 1023 && GlobalState.isTouch)\n    )\n      return\n\n    if (!GlobalState.isTouch) {\n      GlobalState.locoScroll &&\n        GlobalState.locoScroll.on('scroll', ({ scroll }: any) => {\n          setScroll(scroll.y)\n          translate(scroll.y)\n        })\n    } else {\n      window?.addEventListener('scroll', (e: any) => {\n        setScroll(window.scrollY)\n        translate(window.scrollY)\n      })\n    }\n  }, [GlobalState.locoScroll, GlobalState.isTouch])\n\n  return (\n    <aside className=\"book-aside\">\n      <div className=\"book-aside__title\">{bookDetails?.title}</div>\n      <div className=\"book-aside__img\">\n        {UserData.treatments.length ? (\n          <ImageComponent src={UserData.treatments[0].img} alt={ UserData.treatments[0].alt} />\n        ) : (\n          <></>\n        )}\n      </div>\n      <div className=\"book-aside__row\">\n        <div className=\"book-aside__subtitle\">{bookDetails?.locateTitle}</div>\n        <div className=\"book-aside__text\">\n          {UserData.location ? (\n            <>\n              {UserData.location?.title}\n              <br />\n              {UserData.location?.text}\n            </>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n      {UserData.treatments.length ? (\n        UserData.treatments?.map((tr, i) => (\n          <Fragment key={i}>\n            <div className=\"book-aside__row\">\n              <div className=\"book-aside__subtitle\">\n                {bookDetails?.treatTitle}\n              </div>\n              <div className=\"book-aside__text\">{tr.name}</div>\n            </div>\n            <div className=\"book-aside__row\">\n              <div className=\"book-aside__subtitle\">\n                {bookDetails?.duratTitle}\n              </div>\n              <div className=\"book-aside__text\">\n                {tr.time} min - {tr.price}\n              </div>\n            </div>\n          </Fragment>\n        ))\n      ) : (\n        <Fragment>\n          <div className=\"book-aside__row\">\n            <div className=\"book-aside__subtitle\">\n              {bookDetails?.treatTitle}\n            </div>\n            <div className=\"book-aside__text\"></div>\n          </div>\n          <div className=\"book-aside__row\">\n            <div className=\"book-aside__subtitle\">\n              {bookDetails?.duratTitle}\n            </div>\n            <div className=\"book-aside__text\"></div>\n          </div>\n        </Fragment>\n      )}\n      <div className=\"book-aside__row\">\n        <div className=\"book-aside__subtitle\">{bookDetails?.dateTitle}</div>\n        <div className=\"book-aside__text\">\n          {UserData.date ? new Date(UserData.date).toLocaleDateString() : ''}\n        </div>\n      </div>\n      <div className=\"book-aside__row\">\n        <div className=\"book-aside__subtitle\">{bookDetails?.startTitle}</div>\n        <div className=\"book-aside__text\">{UserData.time}</div>\n      </div>\n    </aside>\n  )\n})\n\nexport default BookAside\n","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/BookFinal/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/booking/BookTab/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/booking/FirstStep/index.tsx",["886"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState from '../../../../stores/GlobalState'\nimport SecondStep from '../SecondStep'\nimport SelectItem from '../SelectItem'\nimport { BookingStep, UserData } from '../Steps'\n\nconst FirstStep = observer(() => {\n  const { content, airports } = useContentState()\n\n  const [tabLoc, setTabLoc] = useState('')\n\n  let tabsContinents = airports\n    ?.map((a: any) => a.continent)\n    ?.sort((a: any, b: any) => a?.localeCompare(b))\n\n  tabsContinents = Array.from(new Set(tabsContinents))\n\n  useEffect(() => {\n    if (airports) {\n      setTabLoc(tabsContinents[0])\n    }\n  }, [airports])\n\n  return (\n    <section className={classNames('first-step')}>\n      <div className=\"book-steps__container\">\n        <div\n          className=\"book-steps__title\"\n          dangerouslySetInnerHTML={{ __html: content?.block1?.title }}\n        ></div>\n        <div\n          className=\"book-steps__text\"\n          dangerouslySetInnerHTML={{ __html: content?.block1?.text }}\n        ></div>\n        <div className=\"first-step__tabs \">\n          <div className=\"first-step__tabs-cont\">\n            {tabsContinents?.map((a: any, i: number) => (\n              <div\n                className={classNames(\n                  'first-step__tab',\n                  tabLoc == a && 'active',\n                )}\n                key={i}\n                onClick={() => setTabLoc(a)}\n              >\n                {a}\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"first-step__list\">\n          {airports\n            .find((a: any) => a.continent == tabLoc)\n            ?.list?.map((a: any, i: number) => (\n              <SelectItem\n                multiple={false}\n                item={a}\n                key={i}\n                setSelected={() => {\n                  runInAction(() => {\n                    UserData.location = a\n                  })\n                }}\n                isSelected={\n                  UserData.location &&\n                  (UserData.location as any)?.link == a.link\n                }\n              />\n            ))}\n        </div>\n      </div>\n      <SecondStep />\n    </section>\n  )\n})\n\nexport default FirstStep\n","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/ForthStep/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/booking/SecondStep/index.tsx",["887"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport Button from '../../../common/Button'\nimport SelectItem from '../SelectItem'\nimport { BookingStep, UserData } from '../Steps'\nimport { IconComponent } from '../../../common/IconComponent'\nimport GlobalState from '../../../../stores/GlobalState'\nconst SecondStep = observer(() => {\n  const { content } = useContentState()\n\n  const [tabTreat, setTabTreat] = useState('')\n\n  let tabsTreats = content?.block2?.cards\n    ?.map((a: any) => a.category)\n    ?.sort((a: any, b: any) => a?.localeCompare(b))\n\n  tabsTreats = Array.from(new Set(tabsTreats))\n\n  useEffect(() => {\n    if (content) {\n      setTabTreat(tabsTreats[0])\n    }\n  }, [content])\n\n  return (\n    <div className=\"book-steps__container\">\n      <div\n        className=\"book-steps__title\"\n        dangerouslySetInnerHTML={{ __html: content?.block2?.title }}\n      ></div>\n      <div\n        className=\"book-steps__text\"\n        dangerouslySetInnerHTML={{ __html: content?.block2?.text }}\n      ></div>\n      <div className=\"first-step__tabs \">\n        <div className=\"first-step__tabs-cont children\">\n          {tabsTreats?.map((a: any, i: number) => (\n            <div\n              className={classNames(\n                'first-step__tab',\n                tabTreat == a && 'active',\n              )}\n              key={i}\n              onClick={() => setTabTreat(a)}\n            >\n              {a}\n              {UserData.treatments?.filter(\n                (t) => t.category.toLowerCase() == a.toLowerCase(),\n              )?.length\n                ? ` (${\n                    UserData.treatments?.filter(\n                      (t) => t.category.toLowerCase() == a.toLowerCase(),\n                    )?.length\n                  })`\n                : ''}\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"first-step__list\">\n        {content?.block2?.cards\n          .filter(\n            (a: any) => a.category.toLowerCase() == tabTreat.toLowerCase(),\n          )\n          ?.map((a: any, i: number) => (\n            <SelectItem\n              withTime\n              multiple={true}\n              item={a}\n              key={i}\n              time={\n                UserData.treatments?.find((c: any) => c.id == a.id)\n                  ? UserData.treatments?.find((c: any) => c.id == a.id)?.time\n                  : a.prices[0].time\n              }\n              setSelected={() => {\n                if (UserData.treatments?.find((c: any) => c.id == a.id)) {\n                  runInAction(() => {\n                    UserData.treatments = UserData.treatments?.filter(\n                      (c: any) => c.id != a.id,\n                    )\n                  })\n                } else {\n                  // if (UserData.treatments.length == 2) return\n                  let amount = a?.prices[0].amount.find((a: any) =>\n                    a.country.includes(GlobalState.currentLocale.country),\n                  )\n\n                  runInAction(() => {\n                    UserData.treatments = [\n                      ...(UserData.treatments as any),\n                      {\n                        id: a.id,\n                        time: a.prices[0].time,\n                        category: a.category,\n                        img: a.img,\n                        alt: a.alt,\n                        name: a.title,\n                        price: amount.value + amount.currency,\n                      },\n                    ]\n                  })\n                }\n              }}\n              isSelected={!!UserData.treatments.find((c: any) => c.id == a.id)}\n            />\n          ))}\n      </div>\n      <Button\n        classStr={classNames(\n          'beige button-arrow button-svg p20p40',\n          (!UserData.location || !UserData.treatments.length) && 'disabled',\n        )}\n        isLink={false}\n        action={() => {\n          runInAction(() => {\n            BookingStep.show = false\n          })\n\n          setTimeout(() => {\n            BookingStep.tab = 1\n          }, 600)\n        }}\n        inner={\n          <>\n            {content?.block1?.buttonTitle}\n            <IconComponent name=\"arrow\" />\n          </>\n        }\n      />\n    </div>\n  )\n})\n\nexport default SecondStep\n","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/SelectItem/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/booking/Steps/index.tsx",["888"],[],"import classNames from 'classnames'\nimport { observable, runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState from '../../../../stores/GlobalState'\nimport BookAside from '../BookAside'\nimport BookFinal from '../BookFinal'\nimport BookTab from '../BookTab'\nimport FirstStep from '../FirstStep'\nimport ForthStep from '../ForthStep'\nimport ThirdScreen from '../ThirdStep'\n\nexport type UserDataType = {\n  location: any\n  treatments: Array<{\n    id: number | string\n    time: number | string\n    category: string\n    img: string | null\n    alt: string\n    name: string\n    price: number | string\n  }>\n  date: string | null\n  time: string | null\n  fname: string\n  lname: string\n  email: string\n  phone: string\n  addInfo: string\n  check1: boolean\n  check2: boolean\n}\n\nexport const UserData: UserDataType = observable({\n  location: null,\n  treatments: [],\n  date: null,\n  time: null,\n  fname: '',\n  lname: '',\n  email: '',\n  phone: '',\n  addInfo: '',\n  check1: true,\n  check2: true,\n})\n\nexport const BookingStep = observable({\n  tab: 0,\n  show: false,\n})\n\nconst BookingSteps = observer(() => {\n  const { content } = useContentState()\n\n  useEffect(() => {\n    if (!GlobalState.isTouch) {\n      GlobalState.locoScroll &&\n        GlobalState.locoScroll.scrollTo(0, 0, {\n          duration: 0,\n          disableLerp: true,\n        })\n    } else {\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth',\n      })\n    }\n    setTimeout(() => {\n      runInAction(() => {\n        BookingStep.show = true\n      })\n    }, 600)\n  }, [BookingStep.tab, GlobalState.isTouch])\n\n  useEffect(() => {\n    if (!UserData.location) {\n      if (localStorage.getItem('location')) {\n        const loc = JSON.parse(localStorage.getItem('location')!)\n        if (loc) {\n          runInAction(() => {\n            UserData.location = loc\n          })\n          localStorage.removeItem('location')\n        }\n      }\n      if (localStorage.getItem('treatment')) {\n        const treat = JSON.parse(localStorage.getItem('treatment')!)\n        if (treat) {\n          runInAction(() => {\n            UserData.treatments = [treat]\n          })\n          localStorage.removeItem('treatment')\n        }\n      }\n    }\n  }, [])\n\n  if (BookingStep.tab == 3) {\n    return <BookFinal />\n  }\n  return (\n    <section className={classNames('book-steps', BookingStep.show && 'show')}>\n      <div className=\"book-steps__cont\">\n        <div className=\"book-steps__content\">\n          <div className=\"book-steps__tabs\">\n            {content?.tabs?.map((t: any, i: number) => (\n              <BookTab\n                key={i}\n                isActive={BookingStep.tab == i}\n                isDisable={\n                  i == BookingStep.tab\n                    ? true\n                    : !i\n                    ? false\n                    : i == 1 && UserData.location && UserData.treatments.length\n                    ? false\n                    : i == 2 &&\n                      UserData.location &&\n                      UserData.treatments.length &&\n                      UserData.date &&\n                      UserData.time\n                    ? false\n                    : true\n                }\n                text={t.title}\n                isFirst={!i}\n                isLast={i + 1 == content?.tabs?.length}\n                setTab={() => {\n                  runInAction(() => {\n                    BookingStep.show = false\n                  })\n                  setTimeout(() => {\n                    runInAction(() => {\n                      BookingStep.tab = i\n                    })\n                  }, 600)\n                }}\n              />\n            ))}\n          </div>\n          {!BookingStep.tab && <FirstStep />}\n          {BookingStep.tab == 1 && <ThirdScreen />}\n          {BookingStep.tab == 2 && <ForthStep />}\n        </div>\n        <div className=\"book-steps__aside\">\n          <BookAside />\n        </div>\n      </div>\n    </section>\n  )\n})\n\nexport default BookingSteps\n","/Users/macbook/Desktop/be-relax — копия/components/pages/booking/ThirdStep/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/booking/TimePop/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/career/Follow/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/career/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/career/Offers/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/career/ResumeForm/index.tsx",["889","890","891"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState, {\n  changeSmallPopState,\n} from '../../../../stores/GlobalState'\nimport { IconComponent } from '../../../common/IconComponent'\nimport Input from '../../../common/Input'\nimport Select, { SelectState } from '../../../common/Select'\nimport Title40 from '../../../common/Title40'\nimport { UserData } from '../../booking/Steps'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport PhoneSelect from '../../../common/PhoneSelect'\nimport { vacancyForm } from '../../../../stores/ContentState'\n\nconst ResumeForm = observer(({ isCareerPage }: { isCareerPage: boolean }) => {\n  const ref = useRef<any>(null),\n    recaptchaRef = useRef<any>(null)\n\n  const [isVerify, setVerify] = useState(false)\n\n  const [state, setState] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    city: '',\n    country: '',\n    phone: '',\n    profType: '',\n    location: null,\n    message: '',\n    file2: null,\n    file: null,\n  })\n  const [resetState, setReset] = useState(false)\n\n  const { content, airports } = useContentState()\n  const form = content?.form\n\n  const fileLoad = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file: e.target.files[0],\n    })\n  }\n\n  const fileLoad2 = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file2: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file2: e.target.files[0],\n    })\n  }\n\n  const submit = () => {\n    if (!ref.current || !isVerify) return\n    if (isCareerPage && (!state.profType.length || !state.location)) return\n    vacancyForm(state).then(() => {\n      changeSmallPopState()\n    })\n  }\n\n  useEffect(() => {\n    if (SelectState.selected) {\n      setState({\n        ...state,\n        location: SelectState.selected,\n      })\n    }\n  }, [SelectState.selected])\n  useEffect(() => {\n    if (UserData.time) {\n      setState({\n        ...state,\n        profType: UserData.time || '',\n      })\n    }\n  }, [UserData.time])\n\n  useEffect(() => {\n    if (GlobalState.isSmallOpen) {\n      setState({\n        ...state,\n        fname: '',\n        lname: '',\n        file: null,\n        file2: null,\n        profType: '',\n        location: null,\n        email: '',\n        message: '',\n        phone: '',\n        city: '',\n        country: '',\n      })\n\n      runInAction(() => {\n        UserData.time = null\n        SelectState.selected = null\n      })\n      setReset(true)\n\n      recaptchaRef.current?.reset()\n    }\n  }, [GlobalState.isSmallOpen])\n\n  const onReCAPTCHAChange = (captchaCode: any) => {\n    if (!captchaCode) {\n      setVerify(false)\n      return\n    }\n    setVerify(true)\n  }\n\n\n  return (\n    <section className=\"resume-form\">\n      <div className=\"resume-form__container\">\n        <Title40 text={form?.title} classStr=\"resume-form__title\" />\n        <div\n          className=\"resume-form__text\"\n          dangerouslySetInnerHTML={{ __html: form?.text }}\n        ></div>\n        <form\n          className=\"resume-form__form\"\n          ref={ref}\n          onSubmit={(e) => {\n            e.preventDefault()\n            submit()\n          }}\n        >\n          <div className=\"resume-form__form-cont\">\n            <div className=\"resume-form__form-row\">\n              <Input\n                value={state.fname}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    fname: value,\n                  })\n                }\n                name=\"fname\"\n                isRequired\n                placeHolder={form?.fnamePlaceholder}\n                classStr=\"mr\"\n              />\n              <Input\n                value={state.lname}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    lname: value,\n                  })\n                }\n                name=\"lname\"\n                isRequired\n                placeHolder={form?.lnamePlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"resume-form__form-row\">\n              <Input\n                value={state.email}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    email: value,\n                  })\n                }\n                name=\"email\"\n                type=\"email\"\n                isRequired\n                placeHolder={form?.emailPlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"resume-form__form-row\">\n              <PhoneSelect\n                dt={form?.phoneCodes}\n                isRequired\n                placeholder={form?.phoneNumberPlaceholder}\n                resetField={resetState}\n                setPhoneNumber={(value) =>\n                  setState({\n                    ...state,\n                    phone: value,\n                  })\n                }\n              />\n            </div>\n            <div className=\"resume-form__form-row\">\n              <Input\n                value={state.city}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    city: value,\n                  })\n                }\n                name=\"city\"\n                isRequired\n                placeHolder={form?.cityPlaceHolder}\n                classStr=\"mr\"\n              />\n              <Input\n                value={state.country}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    country: value,\n                  })\n                }\n                name=\"country\"\n                isRequired\n                placeHolder={form?.countryPlaceHolder}\n                classStr=\"\"\n              />\n            </div>\n            {isCareerPage && (\n              <>\n                <div className=\"resume-form__form-row\">\n                  <Select\n                    value={state.profType}\n                    isLocate={false}\n                    withSearch={false}\n                    placeholder={form?.profPlaceholder}\n                    isTimeSelect\n                    dt={JSON.parse(\n                      JSON.stringify(content?.offers?.select1),\n                    ).sort((a: any, b: any) => a.localeCompare(b))}\n                  />\n                </div>\n                <div className=\"resume-form__form-row\">\n                  <Select\n                    value={''}\n                    isLocate={true}\n                    withSearch={true}\n                    placeholder={form?.locatePlaceholder}\n                    dt={airports}\n                  />\n                </div>\n              </>\n            )}\n            <div className=\"resume-form__form-row\">\n              <textarea\n                className=\"input\"\n                value={state.message}\n                required\n                placeholder={form?.msgPlaceholder}\n                onChange={(e) =>\n                  setState({ ...state, message: e.target.value })\n                }\n              ></textarea>\n            </div>\n            <div className=\"contact__form-row\">\n              <div\n                className={classNames(\n                  'product-reg__form-bg',\n                  state.file && 'selected',\n                )}\n              >\n                <div className={classNames('product-reg__form-file')}>\n                  <input\n                    type={'file'}\n                    onChange={fileLoad}\n                    accept=\".doc,.docx,.pdf\"\n                    required\n                  />\n                  <div className=\"product-reg__form-text\">\n                    <IconComponent\n                      name={'form/close+delete'}\n                      className={classNames(state.file && 'show')}\n                    />\n                    <IconComponent\n                      name={'form/upload'}\n                      className={classNames(!state.file && 'show')}\n                    />\n\n                    {state.file ? (\n                      <>{(state?.file as any)?.name}</>\n                    ) : (\n                      <>{form?.uploadResume}</>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"contact__form-row\">\n              <div\n                className={classNames(\n                  'product-reg__form-bg',\n                  state.file2 && 'selected',\n                )}\n              >\n                <div className={classNames('product-reg__form-file')}>\n                  <input type={'file'} onChange={fileLoad2} />\n                  <div className=\"product-reg__form-text\">\n                    <IconComponent\n                      name={'form/close+delete'}\n                      className={classNames(state.file2 && 'show')}\n                    />\n                    <IconComponent\n                      name={'form/upload'}\n                      className={classNames(!state.file2 && 'show')}\n                    />\n\n                    {state.file2 ? (\n                      <>{(state?.file2 as any)?.name}</>\n                    ) : (\n                      <>{form?.coverLetter}</>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              sitekey=\"6Legy0ojAAAAAOWqwkihlGuTyRkgTOVGR9HhBFIe\"\n              render=\"explicit\"\n              onChange={onReCAPTCHAChange}\n            />\n            <button\n              type=\"submit\"\n              className={classNames(\n                'button beige button-arrow button-svg p20p40',\n              )}\n            >\n              {form?.buttonTitle}\n              <IconComponent name=\"arrow\" />\n            </button>\n          </div>\n        </form>\n      </div>\n    </section>\n  )\n})\n\nexport default ResumeForm\n","/Users/macbook/Desktop/be-relax — копия/components/pages/contact/ContactForm/index.tsx",["892","893","894"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState, {\n  changeSmallPopState,\n} from '../../../../stores/GlobalState'\nimport { IconComponent } from '../../../common/IconComponent'\nimport Input from '../../../common/Input'\nimport InViewComponent from '../../../common/InViewComponent'\nimport Select, { SelectState } from '../../../common/Select'\nimport Text from '../../../common/Text'\nimport Title from '../../../common/Title'\nimport Title40 from '../../../common/Title40'\nimport { UserData } from '../../booking/Steps'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport { contactForm } from '../../../../stores/ContentState'\n\nconst ContactForm = observer(() => {\n  const ref = useRef<any>(null),\n    recaptchaRef = useRef<any>(null)\n\n  const [isVerify, setVerify] = useState(false)\n\n  const { content, airports } = useContentState()\n  const [state, setState] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    msg: '',\n    subject: '',\n    location: '',\n    file: null,\n    file2: null,\n  })\n\n  const submit = () => {\n    if (!ref.current || !isVerify) return\n    if (state.subject.includes('Defective') && !state.file && !state.file2)\n      return\n\n    contactForm(state).then(() => {\n      changeSmallPopState()\n    })\n  }\n\n  const fileLoad = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file: e.target.files[0],\n    })\n  }\n  const fileLoad2 = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file2: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file2: e.target.files[0],\n    })\n  }\n\n  useEffect(() => {\n    setState({\n      ...state,\n      subject: UserData.time || '',\n    })\n  }, [UserData.time])\n\n  useEffect(() => {\n    if (SelectState.selected) {\n      setState({\n        ...state,\n        location: SelectState.selected,\n      })\n    }\n  }, [SelectState.selected])\n\n  useEffect(() => {\n    if (GlobalState.isSmallOpen) {\n      setState({\n        ...state,\n        fname: '',\n        lname: '',\n        file: null,\n        file2: null,\n        subject: '',\n        location: '',\n        email: '',\n        msg: '',\n      })\n\n      runInAction(() => {\n        UserData.time = null\n        UserData.date = null\n      })\n      recaptchaRef.current?.reset()\n    }\n  }, [GlobalState.isSmallOpen])\n\n  const onReCAPTCHAChange = (captchaCode: any) => {\n    if (!captchaCode) {\n      setVerify(false)\n      return\n    }\n    setVerify(true)\n  }\n\n  return (\n    <section className=\"contact\">\n      <div className=\"contact__container\">\n        <InViewComponent>\n          <Title text={content?.title} classStr=\"contact__title\" />\n          <Text text={content?.text} classStr=\"contact__text\" />\n        </InViewComponent>\n        <InViewComponent delay={1}>\n          <form\n            ref={ref}\n            className=\"contact__form\"\n            onSubmit={(e) => {\n              e.preventDefault()\n              submit()\n            }}\n          >\n            <div className=\"contact__form-container\">\n              <Title40\n                text={content?.formTitle}\n                classStr=\"contact__form-title\"\n              />\n              <div className=\"contact__form-row\">\n                <Input\n                  value={state.fname}\n                  classStr=\"mr\"\n                  placeHolder={content?.fnamePlaceholder}\n                  name=\"fname\"\n                  isRequired\n                  setValue={(value) => setState({ ...state, fname: value })}\n                />\n                <Input\n                  value={state.lname}\n                  classStr=\"\"\n                  placeHolder={content?.lnamePlaceholder}\n                  name=\"lname\"\n                  isRequired\n                  setValue={(value) => setState({ ...state, lname: value })}\n                />\n              </div>\n              <div className=\"contact__form-row\">\n                <Input\n                  value={state.email}\n                  classStr=\"\"\n                  placeHolder={content?.emailPlaceholder}\n                  name=\"email\"\n                  isRequired\n                  setValue={(value) => setState({ ...state, email: value })}\n                />\n              </div>\n              <div className=\"contact__form-row\">\n                <Select\n                  withSearch={false}\n                  isLocate={false}\n                  isTimeSelect\n                  dt={JSON.parse(\n                    JSON.stringify(content?.subjectSelect),\n                  ).sort((a: any, b: any) => a.localeCompare(b))}\n                  value=\"\"\n                  placeholder={content?.subjectPlaceholder}\n                />\n              </div>\n              <div className=\"contact__form-row\">\n                <Select\n                  withSearch\n                  isLocate\n                  dt={airports}\n                  value=\"\"\n                  placeholder={content?.locatePlaceholder}\n                />\n              </div>\n              <div className=\"contact__form-row\">\n                <textarea\n                  required\n                  name=\"message\"\n                  value={state.msg}\n                  placeholder={content?.msgPlaceholder}\n                  className=\"input\"\n                  onChange={(e) => setState({ ...state, msg: e.target.value })}\n                ></textarea>\n              </div>\n              {state?.subject.includes('Defective') && (\n                <div className=\"contact__form-row\">\n                  <div\n                    className={classNames(\n                      'product-reg__form-bg',\n                      state.file && 'selected',\n                    )}\n                  >\n                    <div className={classNames('product-reg__form-file')}>\n                      <input\n                        type={'file'}\n                        onChange={fileLoad}\n                        accept=\".doc,.docx,.pdf\"\n                        required\n                      />\n                      <div className=\"product-reg__form-text\">\n                        <IconComponent\n                          name={'form/close+delete'}\n                          className={classNames(state.file && 'show')}\n                        />\n                        <IconComponent\n                          name={'form/upload'}\n                          className={classNames(!state.file && 'show')}\n                        />\n\n                        {state.file ? (\n                          <>{(state?.file as any)?.name}</>\n                        ) : (\n                          <>{content?.uploadReciept}</>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              {state?.subject.includes('Defective') && (\n                <div className=\"contact__form-row\">\n                  <div\n                    className={classNames(\n                      'product-reg__form-bg',\n                      state.file2 && 'selected',\n                    )}\n                  >\n                    <div className={classNames('product-reg__form-file')}>\n                      <input type={'file'} onChange={fileLoad2} required />\n                      <div className=\"product-reg__form-text\">\n                        <IconComponent\n                          name={'form/close+delete'}\n                          className={classNames(state.file2 && 'show')}\n                        />\n                        <IconComponent\n                          name={'form/upload'}\n                          className={classNames(!state.file2 && 'show')}\n                        />\n\n                        {state.file2 ? (\n                          <>{(state?.file2 as any)?.name}</>\n                        ) : (\n                          <>{content?.attachPhoto}</>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )}\n              <ReCAPTCHA\n                ref={recaptchaRef}\n                sitekey=\"6Legy0ojAAAAAOWqwkihlGuTyRkgTOVGR9HhBFIe\"\n                render=\"explicit\"\n                onChange={onReCAPTCHAChange}\n              />\n              <button\n                type=\"submit\"\n                className={classNames(\n                  'button beige button-arrow button-svg p20p40',\n                )}\n              >\n                {content?.buttonTitle}\n                <IconComponent name=\"arrow\" />\n              </button>\n            </div>\n          </form>\n        </InViewComponent>\n      </div>\n    </section>\n  )\n})\n\nexport default ContactForm\n","/Users/macbook/Desktop/be-relax — копия/components/pages/faq/Faq/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/find/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/find/PlaceCard/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/find/PlacesList/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/find/PlacesListMob/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/home/BookBlock/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/home/FollowUs/index.tsx",["895","896"],[],"import { observer } from 'mobx-react'\nimport Button from '../../../common/Button'\nimport { IconComponent } from '../../../common/IconComponent'\nimport { useInView } from 'react-intersection-observer'\nimport { useEffect, useState } from 'react'\nimport classNames from 'classnames'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport ImageComponent from '../../../common/ImageComponent'\nimport CustomSlider from '../../../common/CustomSlider'\n\nconst FollowUs = observer(() => {\n  const {\n    content: { follow },\n  } = useContentState()\n\n  const [end, setEnd] = useState(false)\n  const { ref, inView, entry } = useInView({\n    threshold: 0,\n  })\n  useEffect(() => {\n    if (!end) {\n      setEnd(inView)\n    }\n  }, [inView])\n\n  useEffect(() => {\n    if (follow) {\n      const items = document.querySelectorAll('.follow-us__img')\n      if (items) {\n        items.forEach((i, id) => {\n          if (i) {\n            ;(i as HTMLElement).style.transitionDelay = `${id * 0.1}s`\n          }\n        })\n      }\n    }\n  }, [follow])\n\n  return (\n    <section className=\"follow-us\">\n      <div className=\"follow-us__container\">\n        <div\n          className={classNames('follow-us__top', end && 'animated')}\n          ref={ref}\n        >\n          <h2\n            className=\"follow-us__title\"\n            dangerouslySetInnerHTML={{ __html: follow?.title }}\n          ></h2>\n          <div\n            className=\"follow-us__text\"\n            dangerouslySetInnerHTML={{ __html: follow?.text }}\n          ></div>\n          <Button\n            classStr=\"white button-arrow button-svg p24\"\n            isLink\n            link={follow?.link}\n            target\n            inner={\n              <>\n                {follow?.textLink}\n                <IconComponent name={'arrow'} />\n              </>\n            }\n          />\n        </div>\n        <div className=\"follow-us__list\">\n          {follow?.images?.map((f: any, i: number) => (\n            <FollowUsImage f={f} key={i} />\n          ))}\n        </div>\n      </div>\n    </section>\n  )\n})\n\nexport default FollowUs\n\nconst FollowUsImage = ({ f }: { f: any }) => {\n  const [end, setEnd] = useState(false)\n  const { ref, inView, entry } = useInView({\n    threshold: 0,\n  })\n  useEffect(() => {\n    if (!end) {\n      setEnd(inView)\n    }\n  }, [inView])\n\n  return (\n    <div className={classNames('follow-us__img', end && 'animated')} ref={ref}>\n      <ImageComponent src={f.img || ''} alt={f.alt} />\n    </div>\n  )\n}\n","/Users/macbook/Desktop/be-relax — копия/components/pages/home/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/home/IntroVideo/index.tsx",["897"],[],"import { observer } from 'mobx-react'\nimport { useEffect, useRef } from 'react'\nimport GlobalState from '../../../../stores/GlobalState'\nimport InViewComponent from '../../../common/InViewComponent'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport ImageComponent from '../../../common/ImageComponent'\nimport { useWindowDimensions } from '../../../../hooks/getWindowDimensions'\n\nconst IntroVideo = observer(() => {\n  const {\n    content: { intro },\n  } = useContentState()\n\n  const { width } = useWindowDimensions()\n\n  useEffect(() => {\n    if (intro) {\n      const scroll = document.querySelector('.intro__scroll')\n      const smooth = document.querySelector('.smooth')\n      const gallery = document.querySelector('.intro__gallery')\n      const bigCol = document.querySelector('.intro__gallery-col.big')\n      const video = document.querySelector('.intro__gallery-img.video')\n      const imgBig = document.querySelector('.intro__gallery-img.b72')\n\n      const galleryColsSmall = document.querySelectorAll(\n        '.intro__gallery-col.small',\n      )\n      const galleryColsMiddle = document.querySelectorAll(\n        '.intro__gallery-col.middle',\n      )\n\n      //----\n      if (\n        scroll &&\n        smooth &&\n        gallery &&\n        bigCol &&\n        video &&\n        imgBig &&\n        galleryColsSmall &&\n        galleryColsMiddle\n      ) {\n        const v = video.querySelector('video'),\n          img = video.querySelector('img')\n        //----\n        const height = gallery.getBoundingClientRect().height\n        const bodyTop = smooth.getBoundingClientRect().top\n        const rectTop = scroll.getBoundingClientRect().top\n        const windowDiff = (window.innerHeight - height) / 2\n\n        const offset = rectTop - bodyTop - windowDiff\n\n        const bottom =\n          scroll.getBoundingClientRect().bottom - height - windowDiff\n        const columnGap = 32 / (window.innerWidth / 100)\n\n        if (!GlobalState.isTouch) {\n          GlobalState.locoScroll &&\n            (GlobalState.locoScroll as any).on('scroll', ({ scroll }: any) => {\n              if (window.innerWidth >= 1024) {\n                if (scroll.y < offset) {\n                  requestAnimationFrame(() => {\n                    ;(gallery as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n                    ;(bigCol as HTMLElement).style.clipPath = `\n                 inset(18% 23% round 72px)`\n                    ;(galleryColsSmall[0] as HTMLElement).style.transform = `translate3d(${0}px,0,0)`\n                    ;(galleryColsSmall[1] as HTMLElement).style.transform = `translate3d(-${0}px,0,0)`\n                    ;(galleryColsMiddle[0] as HTMLElement).style.transform = `translate3d(${0}px,0,0)`\n                    ;(galleryColsMiddle[1] as HTMLElement).style.transform = `translate3d(-${0}px,0,0)`\n                  })\n                }\n\n                if (scroll.y >= offset && scroll.y <= bottom) {\n                  const diff = bottom - offset\n                  const lastDiff = (scroll.y - offset) / diff\n                  if (lastDiff >= 0.6) {\n                    v?.classList.add('hidden')\n                    img?.classList.remove('hidden')\n                  } else {\n                    v?.classList.remove('hidden')\n                    img?.classList.add('hidden')\n                  }\n\n                  const marginMinus =\n                    lastDiff * (16 + columnGap) < 16 + columnGap\n                      ? lastDiff * (16 + columnGap)\n                      : 16 + columnGap\n\n                  requestAnimationFrame(() => {\n                    ;(gallery as HTMLElement).style.transform = `translate3d(0, ${\n                      scroll.y - offset >= 1500 ? 1500 : scroll.y - offset\n                    }px, 0)`\n                    ;(bigCol as HTMLElement).style.clipPath = `\n                 inset(${18 - lastDiff * 18 < 0 ? 0 : 18 - lastDiff * 18}% ${\n                      23 - lastDiff * 23 < 0 ? 0 : 23 - lastDiff * 23\n                    }% round ${\n                      78 - lastDiff * 48 < 48 ? 48 : 78 - lastDiff * 48\n                    }px)`\n                    ;(galleryColsSmall[0] as HTMLElement).style.transform = `translate3d(-${marginMinus}vw,0,0)`\n                    ;(galleryColsSmall[1] as HTMLElement).style.transform = `translate3d(${marginMinus}vw,0,0)`\n                    ;(galleryColsMiddle[0] as HTMLElement).style.transform = `translate3d(-${marginMinus}vw,0,0)`\n                    ;(galleryColsMiddle[1] as HTMLElement).style.transform = `translate3d(${marginMinus}vw,0,0)`\n                  })\n                }\n              }\n              if (window.innerWidth < 1024) {\n                const viewportMargin = window.innerWidth > 900 ? 32 : 16\n                if (scroll.y < offset) {\n                  requestAnimationFrame(() => {\n                    ;(gallery as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n                    ;(bigCol as HTMLElement).style.clipPath = `inset(${viewportMargin} round 48px)`\n                  })\n                }\n                if (scroll.y >= offset && scroll.y <= bottom) {\n                  const diff = bottom - offset\n                  const lastDiff = (scroll.y - offset) / diff\n                  if (lastDiff >= 0.8) {\n                    v?.classList.add('hidden')\n                    img?.classList.remove('hidden')\n                  } else {\n                    v?.classList.remove('hidden')\n                    img?.classList.add('hidden')\n                  }\n\n                  const insetOffset =\n                    viewportMargin - lastDiff * viewportMargin < 0\n                      ? 0\n                      : viewportMargin - lastDiff * viewportMargin\n\n                  requestAnimationFrame(() => {\n                    ;(gallery as HTMLElement).style.transform = `translate3d(0, ${\n                      scroll.y - offset >= 1500 ? 1500 : scroll.y - offset\n                    }px, 0)`\n                    ;(bigCol as HTMLElement).style.clipPath = `inset(${insetOffset}px round ${\n                      48 - lastDiff * 48 < 0 ? 0 : 48 - lastDiff * 48\n                    }px)`\n                  })\n                }\n              }\n            })\n        } else {\n          window.addEventListener('scroll', () => {\n            const scroll = {\n              y: window.scrollY,\n            }\n            if (window.innerWidth >= 1024) {\n              if (scroll.y < offset) {\n                requestAnimationFrame(() => {\n                  ;(gallery as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n                  ;(bigCol as HTMLElement).style.clipPath = `\n                 inset(18% 23% round 72px)`\n                  ;(galleryColsSmall[0] as HTMLElement).style.transform = `translate3d(${0}px,0,0)`\n                  ;(galleryColsSmall[1] as HTMLElement).style.transform = `translate3d(-${0}px,0,0)`\n                  ;(galleryColsMiddle[0] as HTMLElement).style.transform = `translate3d(${0}px,0,0)`\n                  ;(galleryColsMiddle[1] as HTMLElement).style.transform = `translate3d(-${0}px,0,0)`\n                })\n              }\n\n              if (scroll.y >= offset && scroll.y <= bottom) {\n                const diff = bottom - offset\n                const lastDiff = (scroll.y - offset) / diff\n                if (lastDiff >= 0.6) {\n                  v?.classList.add('hidden')\n                  img?.classList.remove('hidden')\n                } else {\n                  v?.classList.remove('hidden')\n                  img?.classList.add('hidden')\n                }\n\n                const marginMinus =\n                  lastDiff * (16 + columnGap) < 16 + columnGap\n                    ? lastDiff * (16 + columnGap)\n                    : 16 + columnGap\n\n                requestAnimationFrame(() => {\n                  ;(gallery as HTMLElement).style.transform = `translate3d(0, ${\n                    scroll.y - offset >= 1500 ? 1500 : scroll.y - offset\n                  }px, 0)`\n                  ;(bigCol as HTMLElement).style.clipPath = `\n                 inset(${18 - lastDiff * 18 < 0 ? 0 : 18 - lastDiff * 18}% ${\n                    23 - lastDiff * 23 < 0 ? 0 : 23 - lastDiff * 23\n                  }% round ${\n                    78 - lastDiff * 48 < 48 ? 48 : 78 - lastDiff * 48\n                  }px)`\n                  ;(galleryColsSmall[0] as HTMLElement).style.transform = `translate3d(-${marginMinus}vw,0,0)`\n                  ;(galleryColsSmall[1] as HTMLElement).style.transform = `translate3d(${marginMinus}vw,0,0)`\n                  ;(galleryColsMiddle[0] as HTMLElement).style.transform = `translate3d(-${marginMinus}vw,0,0)`\n                  ;(galleryColsMiddle[1] as HTMLElement).style.transform = `translate3d(${marginMinus}vw,0,0)`\n                })\n              }\n            }\n            if (window.innerWidth < 1024) {\n              const viewportMargin = window.innerWidth > 900 ? 32 : 16\n              if (scroll.y < offset) {\n                requestAnimationFrame(() => {\n                  ;(gallery as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n                  ;(bigCol as HTMLElement).style.clipPath = `inset(${viewportMargin} round 48px)`\n                })\n              }\n              if (scroll.y >= offset && scroll.y <= bottom) {\n                const diff = bottom - offset\n                const lastDiff = (scroll.y - offset) / diff\n                if (lastDiff >= 0.8) {\n                  v?.classList.add('hidden')\n                  img?.classList.remove('hidden')\n                } else {\n                  v?.classList.remove('hidden')\n                  img?.classList.add('hidden')\n                }\n\n                const insetOffset =\n                  viewportMargin - lastDiff * viewportMargin < 0\n                    ? 0\n                    : viewportMargin - lastDiff * viewportMargin\n\n                requestAnimationFrame(() => {\n                  ;(gallery as HTMLElement).style.transform = `translate3d(0, ${\n                    scroll.y - offset >= 1500 ? 1500 : scroll.y - offset\n                  }px, 0)`\n                  ;(bigCol as HTMLElement).style.clipPath = `inset(${insetOffset}px round ${\n                    48 - lastDiff * 48 < 0 ? 0 : 48 - lastDiff * 48\n                  }px)`\n                })\n              }\n            }\n          })\n        }\n      }\n    }\n  }, [intro, GlobalState.locoScroll, GlobalState.isTouch])\n\n  if (width <= 1023) return <></>\n\n  return (\n    <InViewComponent delay={1.5}>\n      <div className=\"intro__gallery-col big center\">\n        <div className=\"intro__gallery-img video b72\">\n          <video\n            src={intro?.mainVideo.video}\n            autoPlay\n            muted\n            poster={intro?.mainVideo.poster}\n            playsInline\n            loop\n          >\n            <source type=\"video/mp4\" src={intro?.mainVideo.video} />\n          </video>\n          <ImageComponent src={intro?.mainImg} classStr=\"hidden intro-img\" alt={intro?.mainImgAlt}/>\n        </div>\n      </div>\n    </InViewComponent>\n  )\n})\n\nexport default IntroVideo\n","/Users/macbook/Desktop/be-relax — копия/components/pages/home/News/index.tsx",["898"],[],"import { observer } from 'mobx-react'\nimport { useRouter } from 'next/router'\nimport { useEffect, useState } from 'react'\nimport { NewsType } from '../../../../types'\nimport Button from '../../../common/Button'\nimport { IconComponent } from '../../../common/IconComponent'\nimport NewsPost from '../../../common/NewsPost'\nimport { useInView } from 'react-intersection-observer'\nimport classNames from 'classnames'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport InViewComponent from '../../../common/InViewComponent'\nimport CustomSlider from '../../../common/CustomSlider'\n\nconst News = observer(() => {\n  const {\n    content: { news },\n    news: newsList,\n  } = useContentState()\n\n  const navigate = useRouter()\n\n  const [end, setEnd] = useState(false)\n  const { ref, inView, entry } = useInView({\n    threshold: 0,\n  })\n  useEffect(() => {\n    if (!end) {\n      setEnd(inView)\n    }\n  }, [inView])\n\n  useEffect(() => {\n    if (news) {\n      const items = document.querySelectorAll('.news-post')\n      if (items) {\n        items.forEach((i, id) => {\n          if (i) {\n            ;(i as HTMLElement).style.transitionDelay = `${id * 0.1}s`\n          }\n        })\n      }\n    }\n  }, [news])\n\n  if (!newsList) return <></>\n\n  const newsSortedList = JSON.parse(JSON.stringify(newsList))\n    ?.sort(\n      (a: NewsType, b: NewsType) =>\n        new Date(b.datetime).getTime() - new Date(a.datetime).getTime(),\n    )\n    .slice(0, 3)\n\n  return (\n    <section className=\"news\">\n      <div className=\"news__container\">\n        <div className={classNames('news__top', end && 'animated')} ref={ref}>\n          <h2\n            className=\"news__title\"\n            dangerouslySetInnerHTML={{ __html: news?.title }}\n          ></h2>\n          <Button\n            isLink\n            link=\"/news\"\n            inner={\n              <>\n                {news?.buttonTitle} <IconComponent name=\"arrow\" />\n              </>\n            }\n            classStr=\"button-arrow button-svg beige p20p40\"\n          />\n        </div>\n        <div className=\"news__list\">\n          {newsSortedList?.map((ni: NewsType, i: number) => (\n            <NewsPost post={ni} key={i} />\n          ))}\n        </div>\n        <div className=\"news__slider\">\n          <CustomSlider\n            slidesToShow={1}\n            slidesToScroll={1}\n            variableWidth\n            infinite={false}\n          >\n            {newsSortedList?.map((ni: NewsType, i: number) => (\n              <NewsPost post={ni} key={i} />\n            ))}\n          </CustomSlider>\n        </div>\n        <InViewComponent>\n          <Button\n            isLink\n            link=\"/news\"\n            inner={\n              <>\n                {news?.buttonTitle} <IconComponent name=\"arrow\" />\n              </>\n            }\n            classStr=\"button-arrow button-svg beige p20p40\"\n          />\n        </InViewComponent>\n      </div>\n    </section>\n  )\n})\n\nexport default News\n","/Users/macbook/Desktop/be-relax — копия/components/pages/home/Products/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/home/Services/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/home/TextBlock/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/Banner/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/FindUs/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/Near/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/Partners/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/Reviews/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/location/Treatments/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/news/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/news/NewsList/index.tsx",["899"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react-lite'\nimport { useEffect, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState from '../../../../stores/GlobalState'\nimport { NewsType } from '../../../../types'\nimport Button from '../../../common/Button'\nimport InViewComponent from '../../../common/InViewComponent'\nimport Select from '../../../common/MainSelect'\nimport NewsPost from '../../../common/NewsPost'\n\nconst NewsList = observer(() => {\n  const [results, setResults] = useState<Array<any>>(Array())\n  const [showCount, setCount] = useState(6)\n  const { content, cards } = useContentState()\n  const [filters, setFilters] = useState<any>({\n    p1: '',\n    p2: '',\n    p3: '',\n  })\n\n  useEffect(() => {\n    let sel1 = '',\n      sel2 = '',\n      sel3 = ''\n    if (content?.select1) {\n      sel1 = content?.select1[0]\n    }\n    if (content?.select2) {\n      sel2 = content?.select2[0]\n    }\n    if (content?.select3) {\n      sel3 = content?.select3[0]\n    }\n    setFilters({\n      ...filters,\n      p1: sel1,\n      p2: sel2,\n      p3: sel3,\n    })\n  }, [])\n\n  useEffect(() => {\n    let res = cards\n\n    if (filters.p1.length) {\n      if (filters.p1.includes('New')) {\n        const sub = res.sort(\n          (r: NewsType, b: NewsType) =>\n            new Date(b.datetime).getTime() - new Date(r.datetime).getTime(),\n        )\n        res = sub\n      }\n      if (filters.p1.includes('Popular')) {\n        const sub = res.sort((r: NewsType, b: NewsType) => b.views - r.views)\n        res = sub\n      }\n    }\n    if (filters.p2.length) {\n      if (filters.p2.includes('All')) {\n        const sub = res\n        res = sub\n      } else {\n        const sub = res.filter((r: NewsType) => r.cat == filters.p2)\n        res = sub\n      }\n    }\n    if (filters.p3.length) {\n      if (filters.p3.includes('All')) {\n        const sub = res\n        res = sub\n      } else {\n        const sub = res.filter((r: NewsType) => {\n          const tim1 = +r.readTime\n          const tim2 = +filters.p3.replaceAll('min', '').replaceAll('s', '')\n          if (tim1 == tim2) return r\n        })\n        res = sub\n      }\n    }\n\n    setResults(res)\n    setCount(6)\n   \n  }, [filters, cards])\n\n  return (\n    <section className=\"news-list\">\n      <div className=\"news-list__container\">\n        <InViewComponent delay={0.3}>\n          <div className=\"news-list__selects\">\n            <Select\n              placeholder={''}\n              dt={JSON.parse(\n                JSON.stringify(content?.select1),\n              ).sort((a: any, b: any) => a.localeCompare(b))}\n              defaultValue={filters.p1}\n              multiple={false}\n              getValue={(value) => {\n                if (!value.length) return\n\n                setFilters({\n                  ...filters,\n                  p1: value,\n                })\n              }}\n            />\n            <Select\n              multiple={false}\n              placeholder={''}\n              defaultValue={filters.p2}\n              dt={JSON.parse(\n                JSON.stringify(content?.select2),\n              ).sort((a: any, b: any) => a.localeCompare(b))}\n              getValue={(value) => {\n                if (!value.length) return\n\n                setFilters({\n                  ...filters,\n                  p2: value,\n                })\n              }}\n            />\n            <Select\n              defaultValue={filters.p3}\n              multiple={false}\n              placeholder={''}\n              dt={JSON.parse(\n                JSON.stringify(content?.select3),\n              ).sort((a: any, b: any) => a.localeCompare(b))}\n              getValue={(value) => {\n                if (!value.length) return\n                setFilters({\n                  ...filters,\n                  p3: value,\n                })\n              }}\n            />\n          </div>\n        </InViewComponent>\n        <div className=\"news-list__list\">\n          {results?.slice(0, showCount).map((re, i) => (\n            <InViewComponent key={i}>\n              <NewsPost post={re} />\n            </InViewComponent>\n          ))}\n        </div>\n\n        <InViewComponent>\n          <Button\n            isLink={false}\n            action={() => {\n              setCount(showCount + 6)\n            \n            }}\n            classStr={classNames(\n              'beige p20p28',\n              showCount >= results?.length && 'hidden',\n            )}\n            inner={<>{content?.loadButton}</>}\n          />\n        </InViewComponent>\n      </div>\n    </section>\n  )\n})\n\nexport default NewsList\n","/Users/macbook/Desktop/be-relax — копия/components/pages/news/TopArticles/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/newsPost/PostContent/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/newsPost/Similiar/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/partners/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/partners/PartnerForm/index.tsx",["900"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { useEffect, useRef, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState, {\n  changeSmallPopState,\n} from '../../../../stores/GlobalState'\nimport { IconComponent } from '../../../common/IconComponent'\nimport Input from '../../../common/Input'\nimport InViewComponent from '../../../common/InViewComponent'\nimport Title40 from '../../../common/Title40'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport PhoneSelect from '../../../common/PhoneSelect'\nimport { partnerForm } from '../../../../stores/ContentState'\n\nconst PartnerForm = observer(() => {\n  const ref = useRef<any>(null),\n    recaptchaRef = useRef<any>(null)\n\n  const [isVerify, setVerify] = useState(false)\n  const { content } = useContentState()\n  const form = content?.form\n\n  const [state, setState] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: '',\n    file: null,\n  })\n\n  const [resetState, setReset] = useState(false)\n  const fileLoad = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file: e.target.files[0],\n    })\n  }\n\n  const submit = () => {\n    if (!ref.current || !isVerify) return\n\n    partnerForm(state).then(() => {\n      changeSmallPopState()\n    })\n  }\n\n  useEffect(() => {\n    if (GlobalState.isSmallOpen) {\n      setState({\n        ...state,\n        fname: '',\n        lname: '',\n        file: null,\n        email: '',\n        message: '',\n        phone: '',\n        company: '',\n      })\n      recaptchaRef.current?.reset()\n      setReset(true)\n    }\n  }, [GlobalState.isSmallOpen])\n\n  const onReCAPTCHAChange = (captchaCode: any) => {\n    if (!captchaCode) {\n      setVerify(false)\n      return\n    }\n    setVerify(true)\n  }\n  return (\n    <section className=\"partner-form\">\n      <InViewComponent>\n        <div className=\"partner-form__container\">\n          <form\n            className=\"partner-form__form\"\n            ref={ref}\n            onSubmit={(e) => {\n              e.preventDefault()\n              submit()\n            }}\n          >\n            <Title40 text={form?.title} classStr=\"partner-form__title\" />\n            <div\n              className=\"partner-form__text\"\n              dangerouslySetInnerHTML={{ __html: form?.text }}\n            ></div>\n            <div className=\"partner-form__row\">\n              <Input\n                value={state.fname}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    fname: value,\n                  })\n                }\n                name=\"fname\"\n                isRequired\n                placeHolder={form?.fnamePlaceholder}\n                classStr=\"mr\"\n              />\n              <Input\n                value={state.lname}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    lname: value,\n                  })\n                }\n                name=\"lname\"\n                isRequired\n                placeHolder={form?.lnamePlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <Input\n                value={state.email}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    email: value,\n                  })\n                }\n                name=\"email\"\n                type=\"email\"\n                isRequired\n                placeHolder={form?.emailPlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <PhoneSelect\n                dt={form?.phoneCodes}\n                isRequired\n                resetField={resetState}\n                placeholder={form?.phoneNumberPlaceholder}\n                setPhoneNumber={(value) =>\n                  setState({\n                    ...state,\n                    phone: value,\n                  })\n                }\n              />\n\n              {/* <Input\n                value={state.phone}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    phone: value,\n                  })\n                }\n                name=\"phone\"\n                isRequired\n                placeHolder={form?.phoneNumberPlaceholder}\n                classStr=\"\"\n              /> */}\n            </div>\n            <div className=\"partner-form__row\">\n              <Input\n                value={state.company}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    company: value,\n                  })\n                }\n                name=\"company\"\n                isRequired={false}\n                placeHolder={form?.companyPlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <textarea\n                className=\"input\"\n                value={state.message}\n                placeholder={form?.msgPlaceholder}\n                onChange={(e) =>\n                  setState({ ...state, message: e.target.value })\n                }\n              ></textarea>\n            </div>\n            <div className=\"partner-form__row\">\n              <div\n                className={classNames(\n                  'product-reg__form-bg',\n                  state.file && 'selected',\n                )}\n              >\n                <div className={classNames('product-reg__form-file')}>\n                  <input\n                    type={'file'}\n                    onChange={fileLoad}\n                    accept=\".doc,.docx,.pdf\"\n                  />\n                  <div className=\"product-reg__form-text\">\n                    <IconComponent\n                      name={'form/close+delete'}\n                      className={classNames(state.file && 'show')}\n                    />\n                    <IconComponent\n                      name={'form/upload'}\n                      className={classNames(!state.file && 'show')}\n                    />\n\n                    {state.file ? (\n                      <>{(state?.file as any)?.name}</>\n                    ) : (\n                      <>{form?.upload}</>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              sitekey=\"6Legy0ojAAAAAOWqwkihlGuTyRkgTOVGR9HhBFIe\"\n              render=\"explicit\"\n              onChange={onReCAPTCHAChange}\n            />\n            <button\n              type=\"submit\"\n              className={classNames(\n                'button beige button-arrow button-svg p20p40',\n              )}\n            >\n              {form?.buttonTitle}\n              <IconComponent name=\"arrow\" />\n            </button>\n          </form>\n        </div>\n      </InViewComponent>\n    </section>\n  )\n})\nexport default PartnerForm\n","/Users/macbook/Desktop/be-relax — копия/components/pages/partners/PartnersList/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/prodcat/ProductBanner/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/prodcat/ProductsList/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/product/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/product/ProductAside/index.tsx",["901"],[],"import { observer } from 'mobx-react'\nimport { useEffect } from 'react'\nimport GlobalState from '../../../../stores/GlobalState'\n\nconst ProductAside = observer(({ content }: { content: any }) => {\n  const translate = (scroll: any) => {\n    const smooth = document.querySelector('.smooth'),\n      container = document?.querySelector('.product-intro__container'),\n      vect = document.querySelector('.product-intro__scroll')\n    if (!smooth || !container || !vect) return\n\n    var bodyRect = smooth!.getBoundingClientRect(),\n      elemRect = container.getBoundingClientRect(),\n      offset = elemRect.top - bodyRect.top,\n      offsetBottom =\n        offset + elemRect.height - vect.getBoundingClientRect().height\n    if (scroll.y >= offset && scroll.y <= offsetBottom) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${\n          scroll.y - offset\n        }px, 0)`\n      })\n    } else if (scroll.y < offset) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${0}px, 0)`\n      })\n    }\n  }\n\n  useEffect(() => {\n    if (\n      window.innerWidth <= 1023 ||\n      (window.innerWidth > 1023 && GlobalState.isTouch)\n    )\n      return\n\n\n    if (!GlobalState.isTouch) {\n      GlobalState.locoScroll &&\n        GlobalState.locoScroll.on('scroll', ({ scroll }: any) => {\n          translate(scroll)\n        })\n    } else {\n      // window.addEventListener('scroll', () => {\n      //   translate({\n      //     y: window.scrollY,\n      //   })\n      // })\n    }\n  }, [GlobalState.locoScroll, GlobalState.isTouch])\n\n  return <div className=\"product-intro__scroll\">{content}</div>\n})\n\nexport default ProductAside\n","/Users/macbook/Desktop/be-relax — копия/components/pages/products/Explore/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/products/ProdRegister/index.tsx",["902","903","904"],[],"import classNames from 'classnames'\nimport { runInAction } from 'mobx'\nimport { observer } from 'mobx-react'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState, {\n  changeCalendarState,\n  changeSmallPopState,\n} from '../../../../stores/GlobalState'\nimport Button from '../../../common/Button'\nimport CheckBox from '../../../common/CheckBox'\nimport { IconComponent } from '../../../common/IconComponent'\nimport Input from '../../../common/Input'\nimport InViewComponent from '../../../common/InViewComponent'\nimport Select from '../../../common/Select'\nimport Title from '../../../common/Title'\nimport { UserData } from '../../booking/Steps'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport { productRegisterForm } from '../../../../stores/ContentState'\n\nconst ProdRegister = observer(() => {\n  const ref = useRef<any>(null),\n    recaptchaRef = useRef<any>(null)\n\n  const [isVerify, setVerify] = useState(false)\n  const { content } = useContentState()\n  const [state, setState] = useState({\n    fname: '',\n    lname: '',\n    product: {\n      title: '',\n      id: null,\n    },\n    date: null,\n    serialNumber: '',\n    file: null,\n    check1: false,\n    check2: false,\n  })\n\n  const fileLoad = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file: e.target.files[0],\n    })\n  }\n  const submit = useCallback(() => {\n    if (!ref.current || !isVerify) return\n    if (state.check1) {\n      productRegisterForm(state).then(() => {\n        changeSmallPopState()\n      })\n    }\n  }, [isVerify, state])\n\n  useEffect(() => {\n    setState({ ...state, date: UserData.date as any })\n  }, [UserData.date])\n\n  useEffect(() => {\n    const el = content?.products?.find((p: any) => p.title == UserData.time)\n    if (el) {\n      setState({ ...state, product: el })\n    }\n  }, [UserData.time])\n\n  useEffect(() => {\n    if (GlobalState.isSmallOpen) {\n      setState({\n        ...state,\n        fname: '',\n        lname: '',\n        product: {\n          ...state.product,\n          title: '',\n          id: null,\n        },\n        date: null,\n        serialNumber: '',\n        file: null,\n        check1: false,\n        check2: false,\n      })\n\n      runInAction(() => {\n        UserData.time = null\n        UserData.date = null\n      })\n      recaptchaRef.current?.reset()\n    }\n  }, [GlobalState.isSmallOpen])\n\n  const onReCAPTCHAChange = (captchaCode: any) => {\n    if (!captchaCode) {\n      setVerify(false)\n      return\n    }\n    setVerify(true)\n  }\n\n  return (\n    <section className=\"product-reg\">\n      <div className=\"product-reg__container\">\n        <InViewComponent>\n          <div className=\"product-reg__top\">\n            <Title classStr=\"product-reg__title\" text={content?.title} />\n            <div\n              className=\"product-reg__text\"\n              dangerouslySetInnerHTML={{ __html: content?.text }}\n            ></div>\n          </div>\n        </InViewComponent>\n        <InViewComponent delay={1}>\n          <form\n            ref={ref}\n            className=\"product-reg__form\"\n            onSubmit={(e) => {\n              e.preventDefault()\n            }}\n          >\n            <div className=\"product-reg__form-container\">\n              <h2\n                className=\"product-reg__form-title\"\n                dangerouslySetInnerHTML={{ __html: content?.formTitle }}\n              ></h2>\n              <div className=\"product-reg__form-row\">\n                <Input\n                  name={'fname'}\n                  placeHolder={content?.fnamePlaceholder}\n                  classStr=\"mr\"\n                  value={state.fname}\n                  isRequired\n                  setValue={(value) => setState({ ...state, fname: value })}\n                />\n                <Input\n                  name={'lname'}\n                  placeHolder={content?.lnamePlaceholder}\n                  classStr=\"\"\n                  isRequired\n                  value={state.lname}\n                  setValue={(value) => setState({ ...state, lname: value })}\n                />\n              </div>\n              <div className=\"product-reg__form-row\">\n                <Select\n                  isLocate={false}\n                  isTimeSelect={true}\n                  withSearch={false}\n                  placeholder={content?.productPlaceholder}\n                  value={state.product?.title}\n                  dt={JSON.parse(\n                    JSON.stringify(content?.products.map((p: any) => p.title)),\n                  ).sort((a: any, b: any) => a.localeCompare(b))}\n                />\n              </div>\n\n              <div className=\"product-reg__form-row\">\n                <section className={classNames('loc-select')}>\n                  <div className=\"loc-select__top\" onClick={() => {}}>\n                    <span className=\"loc-select__value\">\n                      {state.date\n                        ? new Date(state.date).toLocaleDateString()\n                        : content?.datePlaceholder}\n                    </span>\n\n                    <Button\n                      inner={\n                        <>\n                          <IconComponent name=\"socials/calendar\" />\n                        </>\n                      }\n                      classStr=\"beige button-search\"\n                      isLink={false}\n                      action={changeCalendarState}\n                    />\n                  </div>\n                </section>\n              </div>\n\n              <div className=\"product-reg__form-row\">\n                <Input\n                  placeHolder={content?.serialPlaceholder}\n                  classStr=\"\"\n                  name={'serialNumber'}\n                  isRequired\n                  value={state.serialNumber}\n                  setValue={(value) =>\n                    setState({ ...state, serialNumber: value })\n                  }\n                />\n              </div>\n              <div className=\"product-reg__form-row\">\n                <div\n                  className={classNames(\n                    'product-reg__form-bg',\n                    state.file && 'selected',\n                  )}\n                >\n                  <div className={classNames('product-reg__form-file')}>\n                    <input\n                      type={'file'}\n                      onChange={fileLoad}\n                      accept=\".doc,.docx,.pdf\"\n                      required\n                    />\n                    <div className=\"product-reg__form-text\">\n                      <IconComponent\n                        name={'form/close+delete'}\n                        className={classNames(state.file && 'show')}\n                      />\n                      <IconComponent\n                        name={'form/upload'}\n                        className={classNames(!state.file && 'show')}\n                      />\n\n                      {state.file ? (\n                        <>{(state?.file as any)?.name}</>\n                      ) : (\n                        <>{content?.fileText}</>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"product-reg__form-bottom\">\n                <CheckBox\n                  label={content?.checkOne}\n                  value={state.check1}\n                  returnValue={(value) => setState({ ...state, check1: value })}\n                />\n                <CheckBox\n                  label={content?.checkTwo}\n                  value={state.check2}\n                  returnValue={(value) => setState({ ...state, check2: value })}\n                />\n                <ReCAPTCHA\n                  ref={recaptchaRef}\n                  sitekey=\"6Legy0ojAAAAAOWqwkihlGuTyRkgTOVGR9HhBFIe\"\n                  render=\"explicit\"\n                  onChange={onReCAPTCHAChange}\n                />\n                <button\n                  type=\"submit\"\n                  className={classNames(\n                    'button beige button-arrow button-svg p20p40',\n                  )}\n                  onClick={submit}\n                >\n                  {content?.buttonTitle}\n                  <IconComponent name=\"arrow\" />\n                </button>\n              </div>\n            </div>\n          </form>\n        </InViewComponent>\n      </div>\n    </section>\n  )\n})\n\nexport default ProdRegister\n","/Users/macbook/Desktop/be-relax — копия/components/pages/products/ProductsIntro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/represent/RepresentForm/index.tsx",["905"],[],"import { observer } from 'mobx-react'\nimport classNames from 'classnames'\nimport { useEffect, useRef, useState } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState, {\n  changeSmallPopState,\n} from '../../../../stores/GlobalState'\nimport { IconComponent } from '../../../common/IconComponent'\nimport Input from '../../../common/Input'\nimport InViewComponent from '../../../common/InViewComponent'\nimport Title40 from '../../../common/Title40'\nimport ReCAPTCHA from 'react-google-recaptcha'\nimport PhoneSelect from '../../../common/PhoneSelect'\nimport { airForm } from '../../../../stores/ContentState'\n\nconst RepresentForm = observer(() => {\n  const ref = useRef<any>(null),\n    recaptchaRef = useRef<any>(null)\n\n  const [isVerify, setVerify] = useState(false)\n\n  const { content } = useContentState()\n  const form = content?.form\n\n  const [resetState, setReset] = useState(false)\n\n  const [state, setState] = useState({\n    fname: '',\n    lname: '',\n    email: '',\n    phone: '',\n    company: '',\n    message: '',\n    file: null,\n  })\n  const fileLoad = (e: any) => {\n    if (!e.target.files.length) {\n      setState({ ...state, file: null })\n      return\n    }\n\n    var reader = new FileReader()\n    var url = reader.readAsDataURL(e.target.files[0])\n    setState({\n      ...state,\n      file: e.target.files[0],\n    })\n  }\n\n  const submit = () => {\n    if (!ref.current || !isVerify) return\n\n    airForm(state).then(() => {\n      changeSmallPopState()\n    })\n  }\n\n  useEffect(() => {\n    if (GlobalState.isSmallOpen) {\n      setState({\n        ...state,\n        fname: '',\n        lname: '',\n        file: null,\n        email: '',\n        message: '',\n        phone: '',\n        company: '',\n      })\n      recaptchaRef.current?.reset()\n      setReset(true)\n    }\n  }, [GlobalState.isSmallOpen])\n\n  const onReCAPTCHAChange = (captchaCode: any) => {\n    if (!captchaCode) {\n      setVerify(false)\n      return\n    }\n    setVerify(true)\n  }\n  return (\n    <section className=\"partner-form\">\n      <InViewComponent>\n        <div className=\"partner-form__container\">\n          <form\n            className=\"partner-form__form\"\n            ref={ref}\n            onSubmit={(e) => {\n              e.preventDefault()\n              submit()\n            }}\n          >\n            <Title40 text={form?.title} classStr=\"partner-form__title\" />\n            <div\n              className=\"partner-form__text\"\n              dangerouslySetInnerHTML={{ __html: form?.text }}\n            ></div>\n            <div className=\"partner-form__row\">\n              <Input\n                value={state.fname}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    fname: value,\n                  })\n                }\n                name=\"fname\"\n                isRequired\n                placeHolder={form?.fnamePlaceholder}\n                classStr=\"mr\"\n              />\n              <Input\n                value={state.lname}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    lname: value,\n                  })\n                }\n                name=\"lname\"\n                isRequired\n                placeHolder={form?.lnamePlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <Input\n                value={state.email}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    email: value,\n                  })\n                }\n                name=\"email\"\n                type=\"email\"\n                isRequired\n                placeHolder={form?.emailPlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <PhoneSelect\n                dt={form?.phoneCodes}\n                isRequired\n                placeholder={form?.phoneNumberPlaceholder}\n                resetField={resetState}\n                setPhoneNumber={(value) =>\n                  setState({\n                    ...state,\n                    phone: value,\n                  })\n                }\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <Input\n                value={state.company}\n                setValue={(value) =>\n                  setState({\n                    ...state,\n                    company: value,\n                  })\n                }\n                name=\"company\"\n                isRequired\n                placeHolder={form?.companyPlaceholder}\n                classStr=\"\"\n              />\n            </div>\n            <div className=\"partner-form__row\">\n              <textarea\n                className=\"input\"\n                value={state.message}\n                placeholder={form?.msgPlaceholder}\n                onChange={(e) =>\n                  setState({ ...state, message: e.target.value })\n                }\n              ></textarea>\n            </div>\n            <div className=\"partner-form__row\">\n              <div\n                className={classNames(\n                  'product-reg__form-bg',\n                  state.file && 'selected',\n                )}\n              >\n                <div className={classNames('product-reg__form-file')}>\n                  <input\n                    type={'file'}\n                    onChange={fileLoad}\n                    accept=\".doc,.docx,.pdf\"\n                  />\n                  <div className=\"product-reg__form-text\">\n                    <IconComponent\n                      name={'form/close+delete'}\n                      className={classNames(state.file && 'show')}\n                    />\n                    <IconComponent\n                      name={'form/upload'}\n                      className={classNames(!state.file && 'show')}\n                    />\n\n                    {state.file ? (\n                      <>{(state?.file as any)?.name}</>\n                    ) : (\n                      <>{form?.upload}</>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              sitekey=\"6Legy0ojAAAAAOWqwkihlGuTyRkgTOVGR9HhBFIe\"\n              render=\"explicit\"\n              onChange={onReCAPTCHAChange}\n            />\n            <button\n              type=\"submit\"\n              className={classNames(\n                'button beige button-arrow button-svg p20p40',\n              )}\n            >\n              {form?.buttonTitle}\n              <IconComponent name=\"arrow\" />\n            </button>\n          </form>\n        </div>\n      </InViewComponent>\n    </section>\n  )\n})\n\nexport default RepresentForm\n","/Users/macbook/Desktop/be-relax — копия/components/pages/retailer/RetailerContent/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/search/SearchContent/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/service/Benefits/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/service/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/service/Similiar/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/story/CompanyValues/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/story/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/story/RoadMap/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/story/RoadMapYears/index.tsx",["906"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { Fragment, useEffect, useRef, useState } from 'react'\nimport { SliderState } from '../RoadMap'\n\nconst RoadMapYears = observer(({ list }: { list: any }) => {\n  const ref = useRef<any>(null)\n  const [slide, setSlide] = useState(0)\n\n  useEffect(() => {\n    setSlide(SliderState.id)\n  }, [SliderState.id])\n\n  const getTranslate = (el: any) => {\n    if (!el) return 0\n\n    let string = getComputedStyle(el as any).transform\n    const regex = /scale\\([0-1]\\)/gi\n    let arr = string\n      .replaceAll(regex, '')\n      .replaceAll('(', '')\n      .replaceAll(')', '')\n      .replaceAll('matrix', '')\n      .replaceAll('px', '')\n      .split(',')\n    return arr[0] == 'none' ? 0 : +arr[4]\n  }\n\n  const translate = (value: any) => {\n    requestAnimationFrame(() => {\n      ref.current.style.transform = `translate3d(-${value}px,0,0)`\n    })\n  }\n\n  useEffect(() => {\n    if (ref.current) {\n      const lines = document.querySelectorAll('.roadmap__years-line')\n      if (!lines) return\n      const width = (ref.current as HTMLElement).scrollWidth\n      const parentWidth = (ref.current as HTMLElement).parentElement!.getBoundingClientRect()\n        .width\n      const translateValue = getTranslate(ref.current)\n      const diff = width - parentWidth\n      const part = diff / (lines.length + 1)\n      if (!slide) {\n        translate(part * slide)\n      } else translate(part * (slide + 1))\n\n    }\n  }, [slide])\n  return (\n    <div className=\"roadmap__years\">\n      <div className=\"roadmap__years-cont\" ref={ref}>\n        {list?.map((ye: any, id: number) => (\n          <Fragment key={id}>\n            <div\n              className={classNames(\n                'roadmap__years-item',\n                id == slide && 'current',\n              )}\n              onClick={() => {\n                SliderState.slider && (SliderState.slider as any).slickGoTo(id)\n              }}\n            >\n              <div className=\"roadmap__years-year\">{ye.year}</div>\n              <div className=\"roadmap__years-point\"></div>\n            </div>\n            {id + 1 != list?.length ? (\n              <div className=\"roadmap__years-line\"></div>\n            ) : (\n              <></>\n            )}\n          </Fragment>\n        ))}\n      </div>\n    </div>\n  )\n})\n\nexport default RoadMapYears\n","/Users/macbook/Desktop/be-relax — копия/components/pages/story/StoryBlocks/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/terms/TermsContent/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/treatcat/Categories/index.tsx",["907"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { useRouter } from 'next/router'\nimport { Fragment, useEffect, useRef } from 'react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport GlobalState from '../../../../stores/GlobalState'\nimport CustomSlider from '../../../common/CustomSlider'\nimport ImageComponent from '../../../common/ImageComponent'\nimport InViewComponent from '../../../common/InViewComponent'\n\nconst Categories = ({\n  isFixed = false,\n  isTreats = true,\n}: {\n  isFixed?: boolean\n  isTreats?: boolean\n}) => {\n  const { content } = useContentState()\n\n  const { asPath } = useRouter()\n  useEffect(() => {\n    if (!isFixed) {\n      const smooth = document.querySelector('.smooth')\n      if (!smooth) return\n\n      const el = document.querySelector('.treat-cats:not(.fixed)')\n      const fixedEl = document.querySelector('.treat-cats.fixed')\n\n      const rectBottom = (el as HTMLElement).getBoundingClientRect().bottom\n      const offset = rectBottom - smooth.getBoundingClientRect().top\n\n      GlobalState.locoScroll &&\n        GlobalState.locoScroll.on('scroll', ({ scroll }: any) => {\n          const header = document.querySelector('.header.fixed')\n          if (!header) return\n          if (scroll.y >= offset) {\n            if (!header.classList.contains('show')) {\n              fixedEl?.classList.add('show')\n            } else fixedEl?.classList.remove('show')\n          } else fixedEl?.classList.remove('show')\n        })\n    }\n  }, [GlobalState.locoScroll])\n\n  return (\n    <section\n      className={classNames(\n        'treat-cats',\n        isFixed && 'fixed',\n        isTreats && 'treats',\n      )}\n    >\n      <div className=\"treat-cats__container\">\n        {content?.categories?.map((ci: any, i: number) => (\n          <Fragment key={i}>\n            {isFixed ? (\n              <a\n                className={classNames(\n                  'treat-cats__item',\n                  asPath.includes(ci.link) && 'active',\n                )}\n                href={ci.link}\n              >\n                <span> {ci.title}</span>\n                <ImageComponent src={ci?.img} alt={ ci?.alt} />\n              </a>\n            ) : (\n              <InViewComponent animationClass=\"zoomin\" delay={i * 0.1}>\n                <a\n                  className={classNames(\n                    'treat-cats__item',\n                    asPath.includes(ci.link) && 'active',\n                  )}\n                  href={ci.link}\n                >\n                  <span> {ci.title}</span>\n                  <ImageComponent src={ci?.img} alt={ ci?.alt} />\n                </a>\n              </InViewComponent>\n            )}\n          </Fragment>\n        ))}\n      </div>\n      <div className=\"treat-cats__slider\">\n        <CustomSlider\n          slidesToShow={1}\n          slidesToScroll={1}\n          infinite={false}\n          variableWidth\n        >\n          {content?.categories?.map((ci: any, i: number) => (\n            <Fragment key={i}>\n              {isFixed ? (\n                <a\n                  className={classNames(\n                    'treat-cats__item',\n                    asPath.includes(ci.link) && 'active',\n                  )}\n                  href={ci.link}\n                >\n                  <span> {ci.title}</span>\n                  <ImageComponent src={ci?.img} alt={ci?.alt} />\n                </a>\n              ) : (\n                <InViewComponent animationClass=\"zoomin\" delay={i * 0.1}>\n                  <a\n                    className={classNames(\n                      'treat-cats__item',\n                      asPath.includes(ci.link) && 'active',\n                    )}\n                    href={ci.link}\n                  >\n                    <span> {ci.title}</span>\n                    <ImageComponent src={ci?.img} alt={ci?.alt} />\n                  </a>\n                </InViewComponent>\n              )}\n            </Fragment>\n          ))}\n        </CustomSlider>\n      </div>\n    </section>\n  )\n}\n\nexport default observer(Categories)\n","/Users/macbook/Desktop/be-relax — копия/components/pages/treatcat/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/treatcat/ServicesList/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/treatments/Faqs/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/treatments/Intro/index.tsx",[],[],"/Users/macbook/Desktop/be-relax — копия/components/pages/vacancy/Intro/index.tsx",["908"],[],"import { observer } from 'mobx-react'\nimport { useContentState } from '../../../../hooks/RootStoreProvider'\nimport ImgBackground from '../../../common/ImgBackground'\nimport InViewComponent from '../../../common/InViewComponent'\nimport SocialLink from '../../../common/SocialLink'\nimport Text from '../../../common/Text'\nimport Title from '../../../common/Title'\nimport doc from '../../../../assets/news/doc.svg'\nimport loc from '../../../../assets/location-point 1.svg'\nimport calendar from '../../../../assets/news/calendar.svg'\nimport { IconComponent } from '../../../common/IconComponent'\nimport { getDateShortMonth } from '../../../../funcs/dates'\nimport Button from '../../../common/Button'\nimport Title54 from '../../../common/Title54'\nimport { useEffect } from 'react'\nimport GlobalState from '../../../../stores/GlobalState'\nimport { useWindowDimensions } from '../../../../hooks/getWindowDimensions'\nconst Intro = observer(() => {\n  const { content } = useContentState()\n\n  const translate = (scroll: any) => {\n    const smooth = document.querySelector('.smooth'),\n      main = document?.querySelector('.vacancy-intro__row'),\n      vect = document.querySelector('.vacancy-intro__aside-scroll')\n    if (!smooth || !vect || !main) return\n\n    var bodyRect = smooth!.getBoundingClientRect(),\n      elemRect = main.getBoundingClientRect(),\n      offset = elemRect.top - bodyRect.top,\n      offsetBottom =\n        offset + elemRect.height - vect.getBoundingClientRect().height\n    if (scroll.y < offset) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${-32}px, 0)`\n      })\n    }\n    if (scroll.y >= offset - 32 && scroll.y <= offsetBottom) {\n      requestAnimationFrame(() => {\n        ;(vect as HTMLElement).style.transform = `translate3d(0, ${\n          scroll.y - offset\n        }px, 0)`\n      })\n    }\n  }\n\n  const { width } = useWindowDimensions()\n\n  useEffect(() => {\n    if (width <= 1023) return\n\n    if (!GlobalState.isTouch) {\n      GlobalState.locoScroll &&\n        GlobalState.locoScroll.on('scroll', ({ scroll }: any) => {\n          translate(scroll)\n        })\n    } else {\n      window.addEventListener('scroll', () => {\n        translate({\n          y: window.scrollY,\n        })\n      })\n    }\n  }, [GlobalState.locoScroll, GlobalState.isTouch])\n  return (\n    <section className=\"vacancy-intro\">\n      <div className=\"vacancy-intro__container\">\n        <InViewComponent>\n          <Title text={content?.title} classStr=\"vacancy-intro__title\" />\n          <Text text={content?.text} classStr=\"vacancy-intro__text\" />\n        </InViewComponent>\n        <InViewComponent delay={1}>\n          <ImgBackground src={content?.img} alt={content?.alt} />\n        </InViewComponent>\n        <InViewComponent>\n          <div className=\"vacancy-intro__row\">\n            <div className=\"vacancy-intro__content\">\n              {content?.content?.map((c: any, i: number) => (\n                <div className=\"vacancy-intro__content-block\" key={i}>\n                  <InViewComponent>\n                    <Title54\n                      text={c?.title}\n                      classStr=\"vacancy-intro__content-title\"\n                    />\n                    <Text\n                      classStr=\"vacancy-intro__content-text\"\n                      text={c?.text}\n                    />\n                  </InViewComponent>\n                </div>\n              ))}\n            </div>\n            <aside className=\"vacancy-intro__aside\">\n              <div className=\"vacancy-intro__aside-scroll\">\n                <div className=\"vacancy-intro__aside-row\">\n                  <SocialLink\n                    isClickable={false}\n                    classStr=\"footer__socials-item\"\n                    icon={doc}\n                  />\n                  {content?.typeContract}\n                </div>\n                <div className=\"vacancy-intro__aside-row\">\n                  <SocialLink\n                    isClickable={false}\n                    classStr=\"footer__socials-item\"\n                    icon={loc}\n                  />\n                  {content?.location}\n                </div>\n                <div className=\"vacancy-intro__aside-row\">\n                  <SocialLink\n                    isClickable={false}\n                    classStr=\"footer__socials-item\"\n                    icon={calendar}\n                  />\n                  {content?.dateTimeText} {getDateShortMonth(content?.datetime)}\n                </div>\n                <Button\n                  classStr=\"beige button-arrow button-svg p16p20\"\n                  isLink={false}\n                  action={() => {\n                    const form = document.querySelector('.resume-form')\n                    GlobalState.locoScroll &&\n                      GlobalState.locoScroll.scrollTo(form, {\n                        offset: 120,\n                      })\n                  }}\n                  inner={\n                    <>\n                      {content?.buttonTitle}\n                      <IconComponent name=\"arrow\" />\n                    </>\n                  }\n                />\n              </div>\n            </aside>\n          </div>\n        </InViewComponent>\n      </div>\n    </section>\n  )\n})\n\nexport default Intro\n","/Users/macbook/Desktop/be-relax — копия/components/common/RetailerSelect/index.tsx",["909"],[],"import classNames from 'classnames'\nimport { observer } from 'mobx-react'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport useClickOutSide from '../../../hooks/ClickOutSide'\nimport { useWindowDimensions } from '../../../hooks/getWindowDimensions'\nimport { retailerSearch } from '../../../stores/ContentState'\nimport GlobalState from '../../../stores/GlobalState'\nimport Button from '../Button'\nimport { IconComponent } from '../IconComponent'\n\nconst RetailerSelect = observer(\n  ({\n    placeholder,\n    getValue,\n  }: {\n    placeholder: string\n    getValue: (value: any) => void\n  }) => {\n    const [userLocation, setLocation] = useState<any>(null)\n    const ref = useRef<HTMLElement | null>(null)\n    const outside = useClickOutSide(ref)\n    const [val, setVal] = useState('')\n    const [open, setOpen] = useState(false)\n    const [selected, setSelected] = useState<any>(null)\n    const [list, setList] = useState(null)\n    const { width, height } = useWindowDimensions()\n\n    useEffect(() => {\n      if (outside) {\n        setOpen(false)\n      }\n    }, [outside])\n\n    useEffect(() => {\n      if (!open) {\n        setList(null)\n        GlobalState.locoScroll && GlobalState.locoScroll.start()\n      }\n    }, [open])\n\n    useEffect(() => {\n      if (val?.length && val != selected?.title) {\n        retailerSearch(val).then((r) => {\n          if (!r.length) {\n            setList(r)\n            setOpen(false)\n            return\n          }\n          let res = r.map((c: any) => {\n            return {\n              title: c.post_title,\n              text: c.post_content,\n              id: c.ID,\n            }\n          })\n          if (res.length) {\n            setList(res)\n            setOpen(true)\n          }\n        })\n      } else {\n        setOpen(false)\n        setList(null)\n\n        if (!val.length) {\n          setSelected(null)\n          getValue(null)\n        }\n      }\n    }, [val])\n\n    return (\n      <section className={classNames('loc-select', open && 'open')} ref={ref}>\n        <div className=\"loc-select__top\">\n          <input\n            value={val}\n            placeholder={placeholder}\n            className=\"loc-select__input\"\n            onChange={(e) => {\n              setVal(e.target.value)\n              setSelected(null)\n            }}\n            autoFocus={open}\n          />\n\n          <Button\n            inner={\n              <>\n                <IconComponent name={'Search'} />\n              </>\n            }\n            classStr={classNames('beige button-search', 'search-btn')}\n            isLink={false}\n            action={() => {\n              getValue(selected ? selected : val)\n              setOpen(false)\n            }}\n          />\n        </div>\n        {list && (\n          <div\n            className=\"loc-select__list\"\n            onScroll={() => {\n              GlobalState.locoScroll && GlobalState.locoScroll.stop()\n            }}\n            onMouseLeave={() =>\n              GlobalState.locoScroll && GlobalState.locoScroll.start()\n            }\n          >\n            {list && (\n              <>\n                {(list as any)\n                  ?.sort((a: any, b: any) => a.title.localeCompare(b.title))\n                  .map((li: any, id: number) => (\n                    <div\n                      className=\"loc-select__subitem\"\n                      key={id}\n                      onClick={() => {\n                        setOpen(false)\n                        setSelected(li)\n                        setVal(li?.title)\n                      }}\n                    >\n                      {li.title}\n                    </div>\n                  ))}\n              </>\n            )}\n          </div>\n        )}\n      </section>\n    )\n  },\n)\n\nexport default RetailerSelect\n",{"ruleId":"910","severity":1,"message":"911","line":55,"column":6,"nodeType":"912","endLine":55,"endColumn":68,"suggestions":"913"},{"ruleId":"910","severity":1,"message":"914","line":25,"column":6,"nodeType":"912","endLine":25,"endColumn":33,"suggestions":"915"},{"ruleId":"910","severity":1,"message":"916","line":73,"column":6,"nodeType":"912","endLine":73,"endColumn":8,"suggestions":"917"},{"ruleId":"910","severity":1,"message":"918","line":87,"column":6,"nodeType":"912","endLine":87,"endColumn":8,"suggestions":"919"},{"ruleId":"910","severity":1,"message":"920","line":93,"column":6,"nodeType":"912","endLine":93,"endColumn":27,"suggestions":"921"},{"ruleId":"910","severity":1,"message":"922","line":44,"column":8,"nodeType":"912","endLine":44,"endColumn":44,"suggestions":"923"},{"ruleId":"910","severity":1,"message":"924","line":73,"column":8,"nodeType":"912","endLine":73,"endColumn":32,"suggestions":"925"},{"ruleId":"926","severity":1,"message":"927","line":55,"column":7,"nodeType":"928","endLine":60,"endColumn":9},{"ruleId":"910","severity":1,"message":"929","line":62,"column":8,"nodeType":"912","endLine":62,"endColumn":36,"suggestions":"930"},{"ruleId":"910","severity":1,"message":"931","line":93,"column":6,"nodeType":"912","endLine":93,"endColumn":36,"suggestions":"932"},{"ruleId":"910","severity":1,"message":"933","line":99,"column":6,"nodeType":"912","endLine":99,"endColumn":31,"suggestions":"934"},{"ruleId":"910","severity":1,"message":"935","line":33,"column":6,"nodeType":"912","endLine":33,"endColumn":54,"suggestions":"936"},{"ruleId":"910","severity":1,"message":"937","line":63,"column":8,"nodeType":"912","endLine":63,"endColumn":30,"suggestions":"938"},{"ruleId":"910","severity":1,"message":"939","line":68,"column":6,"nodeType":"912","endLine":68,"endColumn":34,"suggestions":"940"},{"ruleId":"910","severity":1,"message":"941","line":41,"column":6,"nodeType":"912","endLine":41,"endColumn":59,"suggestions":"942"},{"ruleId":"910","severity":1,"message":"941","line":25,"column":6,"nodeType":"912","endLine":25,"endColumn":51,"suggestions":"943"},{"ruleId":"910","severity":1,"message":"944","line":37,"column":6,"nodeType":"912","endLine":37,"endColumn":32,"suggestions":"945"},{"ruleId":"910","severity":1,"message":"946","line":139,"column":8,"nodeType":"912","endLine":139,"endColumn":65,"suggestions":"947"},{"ruleId":"910","severity":1,"message":"948","line":196,"column":8,"nodeType":"912","endLine":196,"endColumn":26,"suggestions":"949"},{"ruleId":"910","severity":1,"message":"950","line":218,"column":8,"nodeType":"912","endLine":218,"endColumn":13,"suggestions":"951"},{"ruleId":"910","severity":1,"message":"952","line":224,"column":8,"nodeType":"912","endLine":224,"endColumn":10,"suggestions":"953"},{"ruleId":"910","severity":1,"message":"941","line":88,"column":6,"nodeType":"912","endLine":88,"endColumn":51,"suggestions":"954"},{"ruleId":"910","severity":1,"message":"955","line":26,"column":6,"nodeType":"912","endLine":26,"endColumn":16,"suggestions":"956"},{"ruleId":"910","severity":1,"message":"957","line":26,"column":6,"nodeType":"912","endLine":26,"endColumn":15,"suggestions":"958"},{"ruleId":"910","severity":1,"message":"959","line":76,"column":6,"nodeType":"912","endLine":76,"endColumn":44,"suggestions":"960"},{"ruleId":"910","severity":1,"message":"961","line":85,"column":6,"nodeType":"912","endLine":85,"endColumn":28,"suggestions":"962"},{"ruleId":"910","severity":1,"message":"963","line":93,"column":6,"nodeType":"912","endLine":93,"endColumn":21,"suggestions":"964"},{"ruleId":"910","severity":1,"message":"965","line":120,"column":6,"nodeType":"912","endLine":120,"endColumn":31,"suggestions":"966"},{"ruleId":"910","severity":1,"message":"963","line":80,"column":6,"nodeType":"912","endLine":80,"endColumn":21,"suggestions":"967"},{"ruleId":"910","severity":1,"message":"961","line":89,"column":6,"nodeType":"912","endLine":89,"endColumn":28,"suggestions":"968"},{"ruleId":"910","severity":1,"message":"965","line":111,"column":6,"nodeType":"912","endLine":111,"endColumn":31,"suggestions":"969"},{"ruleId":"910","severity":1,"message":"970","line":24,"column":6,"nodeType":"912","endLine":24,"endColumn":14,"suggestions":"971"},{"ruleId":"910","severity":1,"message":"970","line":88,"column":6,"nodeType":"912","endLine":88,"endColumn":14,"suggestions":"972"},{"ruleId":"910","severity":1,"message":"941","line":230,"column":6,"nodeType":"912","endLine":230,"endColumn":58,"suggestions":"973"},{"ruleId":"910","severity":1,"message":"970","line":30,"column":6,"nodeType":"912","endLine":30,"endColumn":14,"suggestions":"974"},{"ruleId":"910","severity":1,"message":"975","line":41,"column":6,"nodeType":"912","endLine":41,"endColumn":8,"suggestions":"976"},{"ruleId":"910","severity":1,"message":"965","line":72,"column":6,"nodeType":"912","endLine":72,"endColumn":31,"suggestions":"977"},{"ruleId":"910","severity":1,"message":"941","line":50,"column":6,"nodeType":"912","endLine":50,"endColumn":51,"suggestions":"978"},{"ruleId":"910","severity":1,"message":"979","line":65,"column":6,"nodeType":"912","endLine":65,"endColumn":21,"suggestions":"980"},{"ruleId":"910","severity":1,"message":"981","line":72,"column":6,"nodeType":"912","endLine":72,"endColumn":21,"suggestions":"982"},{"ruleId":"910","severity":1,"message":"965","line":98,"column":6,"nodeType":"912","endLine":98,"endColumn":31,"suggestions":"983"},{"ruleId":"910","severity":1,"message":"965","line":73,"column":6,"nodeType":"912","endLine":73,"endColumn":31,"suggestions":"984"},{"ruleId":"910","severity":1,"message":"985","line":12,"column":6,"nodeType":"912","endLine":12,"endColumn":22,"suggestions":"986"},{"ruleId":"910","severity":1,"message":"987","line":43,"column":6,"nodeType":"912","endLine":43,"endColumn":30,"suggestions":"988"},{"ruleId":"910","severity":1,"message":"989","line":63,"column":6,"nodeType":"912","endLine":63,"endColumn":51,"suggestions":"990"},{"ruleId":"910","severity":1,"message":"991","line":70,"column":8,"nodeType":"912","endLine":70,"endColumn":13,"suggestions":"992"},"react-hooks/exhaustive-deps","React Hook useEffect has unnecessary dependencies: 'StateArrays.news', 'StateArrays.products', and 'StateArrays.services'. Either exclude them or remove the dependency array. Outer scope values like 'StateArrays.news' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["993"],"React Hook useEffect has an unnecessary dependency: 'GlobalState.isCountryOpen'. Either exclude it or remove the dependency array. Outer scope values like 'GlobalState.isCountryOpen' aren't valid dependencies because mutating them doesn't re-render the component.",["994"],"React Hook useEffect has missing dependencies: 'removeClass' and 'setClass'. Either include them or remove the dependency array.",["995"],"React Hook useEffect has missing dependencies: 'loop' and 'updateCoordinates'. Either include them or remove the dependency array.",["996"],"React Hook useEffect has an unnecessary dependency: 'GlobalState.isTouch'. Either exclude it or remove the dependency array. Outer scope values like 'GlobalState.isTouch' aren't valid dependencies because mutating them doesn't re-render the component.",["997"],"React Hook useEffect has an unnecessary dependency: 'GlobalState.locoScroll'. Either exclude it or remove the dependency array. Outer scope values like 'GlobalState.locoScroll' aren't valid dependencies because mutating them doesn't re-render the component.",["998"],"React Hook useEffect has an unnecessary dependency: 'GlobalState.isMenuOpen'. Either exclude it or remove the dependency array. Outer scope values like 'GlobalState.isMenuOpen' aren't valid dependencies because mutating them doesn't re-render the component.",["999"],"@next/next/no-img-element","Do not use `<img>` element. Use `<Image />` from `next/image` instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","React Hook useEffect has missing dependencies: 'getValue' and 'multiple'. Either include them or remove the dependency array. If 'getValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1000"],"React Hook useEffect has an unnecessary dependency: 'FindTabState.location'. Either exclude it or remove the dependency array. Outer scope values like 'FindTabState.location' aren't valid dependencies because mutating them doesn't re-render the component.",["1001"],"React Hook useEffect has an unnecessary dependency: 'FindTabState.tab'. Either exclude it or remove the dependency array. Outer scope values like 'FindTabState.tab' aren't valid dependencies because mutating them doesn't re-render the component.",["1002"],"React Hook useEffect has unnecessary dependencies: 'GlobalState.isMenuOpen' and 'GlobalState.locoScroll'. Either exclude them or remove the dependency array. Outer scope values like 'GlobalState.isMenuOpen' aren't valid dependencies because mutating them doesn't re-render the component.",["1003"],"React Hook useEffect has a missing dependency: 'setPhoneNumber'. Either include it or remove the dependency array. If 'setPhoneNumber' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1004"],"React Hook useEffect has an unnecessary dependency: 'GlobalState.isRetailerOpen'. Either exclude it or remove the dependency array. Outer scope values like 'GlobalState.isRetailerOpen' aren't valid dependencies because mutating them doesn't re-render the component.",["1005"],"React Hook useEffect has unnecessary dependencies: 'GlobalState.isTouch' and 'GlobalState.locoScroll'. Either exclude them or remove the dependency array. Outer scope values like 'GlobalState.locoScroll' aren't valid dependencies because mutating them doesn't re-render the component.",["1006"],["1007"],"React Hook useEffect has an unnecessary dependency: 'GlobalState.isSearchOpen'. Either exclude it or remove the dependency array. Outer scope values like 'GlobalState.isSearchOpen' aren't valid dependencies because mutating them doesn't re-render the component.",["1008"],"React Hook useEffect has unnecessary dependencies: 'SelectState.selected' and 'UserData.time'. Either exclude them or remove the dependency array. Outer scope values like 'SelectState.selected' aren't valid dependencies because mutating them doesn't re-render the component.",["1009"],"React Hook useEffect has a missing dependency: 'isLocate'. Either include it or remove the dependency array.",["1010"],"React Hook useEffect has missing dependencies: 'dt', 'isLocate', and 'selected'. Either include them or remove the dependency array.",["1011"],"React Hook useEffect has missing dependencies: 'isTimeSelect', 'selected', and 'value'. Either include them or remove the dependency array. If 'setSelected' needs the current value of 'value', you can also switch to useReducer instead of useState and read 'value' in the reducer.",["1012"],["1013"],"React Hook useEffect has a missing dependency: 'tabsContinents'. Either include it or remove the dependency array.",["1014"],"React Hook useEffect has a missing dependency: 'tabsTreats'. Either include it or remove the dependency array.",["1015"],"React Hook useEffect has unnecessary dependencies: 'BookingStep.tab' and 'GlobalState.isTouch'. Either exclude them or remove the dependency array. Outer scope values like 'BookingStep.tab' aren't valid dependencies because mutating them doesn't re-render the component.",["1016"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. Outer scope values like 'SelectState.selected' aren't valid dependencies because mutating them doesn't re-render the component.",["1017"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. Outer scope values like 'UserData.time' aren't valid dependencies because mutating them doesn't re-render the component.",["1018"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. Outer scope values like 'GlobalState.isSmallOpen' aren't valid dependencies because mutating them doesn't re-render the component.",["1019"],["1020"],["1021"],["1022"],"React Hook useEffect has a missing dependency: 'end'. Either include it or remove the dependency array.",["1023"],["1024"],["1025"],["1026"],"React Hook useEffect has missing dependencies: 'content?.select1', 'content?.select2', 'content?.select3', and 'filters'. Either include them or remove the dependency array. You can also do a functional update 'setFilters(f => ...)' if you only need 'filters' in the 'setFilters' call.",["1027"],["1028"],["1029"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. Outer scope values like 'UserData.date' aren't valid dependencies because mutating them doesn't re-render the component.",["1030"],"React Hook useEffect has missing dependencies: 'content?.products' and 'state'. Either include them or remove the dependency array. Outer scope values like 'UserData.time' aren't valid dependencies because mutating them doesn't re-render the component.",["1031"],["1032"],["1033"],"React Hook useEffect has an unnecessary dependency: 'SliderState.id'. Either exclude it or remove the dependency array. Outer scope values like 'SliderState.id' aren't valid dependencies because mutating them doesn't re-render the component.",["1034"],"React Hook useEffect has a missing dependency: 'isFixed'. Either include it or remove the dependency array. Outer scope values like 'GlobalState.locoScroll' aren't valid dependencies because mutating them doesn't re-render the component.",["1035"],"React Hook useEffect has a missing dependency: 'width'. Either include it or remove the dependency array. Outer scope values like 'GlobalState.locoScroll' aren't valid dependencies because mutating them doesn't re-render the component.",["1036"],"React Hook useEffect has missing dependencies: 'getValue' and 'selected?.title'. Either include them or remove the dependency array. If 'getValue' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1037"],{"desc":"1038","fix":"1039"},{"desc":"1038","fix":"1040"},{"desc":"1041","fix":"1042"},{"desc":"1043","fix":"1044"},{"desc":"1038","fix":"1045"},{"desc":"1046","fix":"1047"},{"desc":"1038","fix":"1048"},{"desc":"1049","fix":"1050"},{"desc":"1051","fix":"1052"},{"desc":"1051","fix":"1053"},{"desc":"1038","fix":"1054"},{"desc":"1055","fix":"1056"},{"desc":"1038","fix":"1057"},{"desc":"1058","fix":"1059"},{"desc":"1038","fix":"1060"},{"desc":"1038","fix":"1061"},{"desc":"1062","fix":"1063"},{"desc":"1064","fix":"1065"},{"desc":"1066","fix":"1067"},{"desc":"1068","fix":"1069"},{"desc":"1038","fix":"1070"},{"desc":"1071","fix":"1072"},{"desc":"1073","fix":"1074"},{"desc":"1038","fix":"1075"},{"desc":"1076","fix":"1077"},{"desc":"1076","fix":"1078"},{"desc":"1076","fix":"1079"},{"desc":"1076","fix":"1080"},{"desc":"1076","fix":"1081"},{"desc":"1076","fix":"1082"},{"desc":"1083","fix":"1084"},{"desc":"1083","fix":"1085"},{"desc":"1086","fix":"1087"},{"desc":"1083","fix":"1088"},{"desc":"1089","fix":"1090"},{"desc":"1076","fix":"1091"},{"desc":"1038","fix":"1092"},{"desc":"1076","fix":"1093"},{"desc":"1094","fix":"1095"},{"desc":"1076","fix":"1096"},{"desc":"1076","fix":"1097"},{"desc":"1038","fix":"1098"},{"desc":"1099","fix":"1100"},{"desc":"1051","fix":"1101"},{"desc":"1102","fix":"1103"},"Update the dependencies array to be: []",{"range":"1104","text":"1105"},{"range":"1106","text":"1105"},"Update the dependencies array to be: [removeClass, setClass]",{"range":"1107","text":"1108"},"Update the dependencies array to be: [loop, updateCoordinates]",{"range":"1109","text":"1110"},{"range":"1111","text":"1105"},"Update the dependencies array to be: [isAbsolute]",{"range":"1112","text":"1113"},{"range":"1114","text":"1105"},"Update the dependencies array to be: [open, valueMultiple, value, multiple, getValue]",{"range":"1115","text":"1116"},"Update the dependencies array to be: [width]",{"range":"1117","text":"1118"},{"range":"1119","text":"1118"},{"range":"1120","text":"1105"},"Update the dependencies array to be: [show, country, phone, setPhoneNumber]",{"range":"1121","text":"1122"},{"range":"1123","text":"1105"},"Update the dependencies array to be: [router]",{"range":"1124","text":"1125"},{"range":"1126","text":"1105"},{"range":"1127","text":"1105"},"Update the dependencies array to be: [selected, isLocate]",{"range":"1128","text":"1129"},"Update the dependencies array to be: [dt, isLocate, userLocation]",{"range":"1130","text":"1131"},"Update the dependencies array to be: [dt, isLocate, selected, val]",{"range":"1132","text":"1133"},"Update the dependencies array to be: [isTimeSelect, selected, value]",{"range":"1134","text":"1135"},{"range":"1136","text":"1105"},"Update the dependencies array to be: [airports, tabsContinents]",{"range":"1137","text":"1138"},"Update the dependencies array to be: [content, tabsTreats]",{"range":"1139","text":"1140"},{"range":"1141","text":"1105"},"Update the dependencies array to be: [state]",{"range":"1142","text":"1143"},{"range":"1144","text":"1143"},{"range":"1145","text":"1143"},{"range":"1146","text":"1143"},{"range":"1147","text":"1143"},{"range":"1148","text":"1143"},"Update the dependencies array to be: [end, inView]",{"range":"1149","text":"1150"},{"range":"1151","text":"1150"},"Update the dependencies array to be: [intro]",{"range":"1152","text":"1153"},{"range":"1154","text":"1150"},"Update the dependencies array to be: [content?.select1, content?.select2, content?.select3, filters]",{"range":"1155","text":"1156"},{"range":"1157","text":"1143"},{"range":"1158","text":"1105"},{"range":"1159","text":"1143"},"Update the dependencies array to be: [content?.products, state]",{"range":"1160","text":"1161"},{"range":"1162","text":"1143"},{"range":"1163","text":"1143"},{"range":"1164","text":"1105"},"Update the dependencies array to be: [isFixed]",{"range":"1165","text":"1166"},{"range":"1167","text":"1118"},"Update the dependencies array to be: [getValue, selected?.title, val]",{"range":"1168","text":"1169"},[1470,1532],"[]",[760,787],[2353,2355],"[removeClass, setClass]",[2719,2721],"[loop, updateCoordinates]",[2928,2949],[1512,1548],"[isAbsolute]",[2393,2417],[1648,1676],"[open, valueMultiple, value, multiple, getValue]",[2667,2697],"[width]",[2797,2822],[1018,1066],[1587,1609],"[show, country, phone, setPhoneNumber]",[2004,2032],[1032,1085],"[router]",[729,774],[1098,1124],[4068,4125],"[selected, isLocate]",[5609,5627],"[dt, isLocate, userLocation]",[6174,6179],"[dt, isLocate, selected, val]",[6285,6287],"[isTimeSelect, selected, value]",[2647,2692],[800,810],"[airports, tabsContinents]",[859,868],"[content, tabsTreats]",[1668,1706],[2239,2261],"[state]",[2402,2417],[2912,2937],[2120,2135],[2285,2307],[2708,2733],[737,745],"[end, inView]",[2306,2314],[10356,10408],"[intro]",[918,926],[1143,1145],"[content?.select1, content?.select2, content?.select3, filters]",[1826,1851],[1564,1609],[1868,1883],[2050,2065],"[content?.products, state]",[2557,2582],[1821,1846],[366,382],[1517,1541],"[isFixed]",[2277,2322],[1916,1921],"[getValue, selected?.title, val]"]